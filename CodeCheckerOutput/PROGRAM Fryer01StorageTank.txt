	PROGRAM Fryer01StorageTank (Description := "$NProgram=$'EM$'$NClass=$'TANK.02.01$'$N",
	                            MAIN := "_Main",
	                            MODE := 0,
	                            DisableFlag := 0,
	                            UseAsFolder := 0)
		TAG
			DischargeValve OF cDO[402] ;
			DischargeValve_IO_Closed OF iRack4:4:I.Pt12.Data (RADIX := Decimal);
			DischargeValve_IO_Opened OF iRack4:4:I.Pt11.Data (RADIX := Decimal);
			DischargeValve_IO_Output OF iRack4:8:O.Pt04.Data (RADIX := Decimal);
			EStop OF cDI[5] ;
			HighLevel OF cDI[280] ;
			HighLevel_IO_Fault : BOOL (RADIX := Decimal) := 0;
			HighLevel_IO_Input OF iRack4:6:I.Pt04.Data (RADIX := Decimal);
			Level OF cAI[178] ;
			Level_IO_Fault OF iRack4:1:I.Ch00.Fault (RADIX := Decimal);
			Level_IO_SensorOffset : REAL (RADIX := Float) := 3.38000011e+000;
			Level_IO_SpecificGravity : REAL (RADIX := Float) := 9.13171411e-001;
			Level_IO_Value OF iRack4:1:I.Ch00.Data (RADIX := Float);
			ModuloResult : DINT (RADIX := Decimal) := 33;
			Null : CB_NULL  := [[0,0,0,[[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]]],[0,0,0],[0],[[0,0,0],[0,0,0],[0,0,0]],[0,0,0],[[[1],[1],[1]]],[0,[[0,0,0],[0,0,0]],[[0],[0]],[[0],[0]]]],[0,0,0,[[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]]],[0,0,0
					],[0,0,0,0],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[0,0,0,0,0,0],[0,[0,0,0,0,0,0,0,0,0,0],[0,0,0],0,0,0,0],[[1],[1],[1,0,[1,0,0,0],[1,0,0,0,0,0],[1,0]],[1],[1,0,0,0],[[1],[1],[1]],[1,0,0,[0,0
					,0]]],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
					,2#0,2#0,2#0,2#0,2#0],[0],[[0,0,0],[0,0,0],0.00000000e+000,0,0.00000000e+000,0.00000000e+000,0],[[[0,0,0],[0,0,0]],[[0,0,0,0],[0,0
					,0,0]],[[0,0,0,0],[0,0,0,0]]]],[0,0,0,[[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]]],[0,0,0],[0],0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0.00000000e+000,0.00000000e+000
					,[0,0,0],0],[0.00000000e+000,0.00000000e+000,[0,0,0],0],[0.00000000e+000,0.00000000e+000,[0,0,0],0],[0.00000000e+000
					,0.00000000e+000,[0,0,0],0],[0.00000000e+000,0.00000000e+000,[0,0,0],0],[0.00000000e+000,0,0.00000000e+000
					,[0,0,0],[0.00000000e+000,0.00000000e+000,[0,0,0],0],[0.00000000e+000,0.00000000e+000,[0,0,0],0]],[0,0,0,0,0,0,0,0,0,0
					,0,0,0],[0,0,0,0,0,0],0.00000000e+000,[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
					,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[0,[0,0,0,0,0,0,0,0,0,0],[0,0,0],0,0,0,0],[[1,0,[1,0,0,0
					],[1,0,0,0,0,0],[1,0]],[1,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000],[1,0.00000000e+000],[1],[1,0.00000000e+000],[[1],[1],[1
					],[1],[1],[1],[1],[1]]],[0.00000000e+000,0,0.00000000e+000,0.00000000e+000,0],[0],0.00000000e+000,[0,[0,0,0],0.00000000e+000
					,0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,[0,0,0],0]],[0,0,0,[[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0
					,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]]],[0,0,0],[0,0],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000]],0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,[[0,0.00000000e+000,0.00000000e+000,0,[0,0,0],[0,0,0]],[0,0.00000000e+000,0.00000000e+000
					,0,[0,0,0],[0,0,0]],[0,[0,0,0]]],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
					,2#0,2#0,2#0,2#0,2#0],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0,0,0],[0,0,0],[0,0,0]],[0,0,0,0,0,0],[0,[0,0,0,0,0,0,0,0,0,0],[0,0,0],0,0,0,0],[0],[[1],[1]]],[0,0,0,0,0,0,0,0,[[0,0,0,0
					,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]],[0,0,0,0,[0,0,0]]],[0,0,0],[0],[[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
					,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0]],[0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000],[0,[0,0],0],[0],0,0,0,0,0,0,[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],0.00000000e+000,0.00000000e+000
					,0.00000000e+000],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000],[[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0]],0,0,0,0,[0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000],[0,0,0,0,0],0,0,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0,0,0,0,0,0],[0,0,0,0,0,0,0],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
					,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[0,0,0,0,0,0,0,0,0
					,[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
					]],[0,[0,0,0,0,0,0,0,0,0,0],[0,0,0],0,0,0,0],[0,0,[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],0],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
					],[0],[0],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
					],[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
					],[0.00000000e+000,0.00000000e+000,0.00000000e+000,[[1,0,0],[[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0],0,0]],0,0,0,0],[[1,0,0,15,10,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,0]]]];
			OIT OF dOIT[1] ;
			ph_Fryer01AddUsedOil OF cPHZ[15] ;
			PowerInput OF cDI[434] ;
			PowerOutput OF cDI[435] ;
			PowerSafety OF cDI[436] ;
			Pump OF cDO[404] ;
			PumpSpeedReference OF cAO[97] ;
			Pump_IO_ClearFaults OF iDrive_M411:O.ClearFaults (RADIX := Decimal);
			Pump_IO_Faulted OF iDrive_M411:I.Faulted (RADIX := Decimal);
			Pump_IO_Running OF iDrive_M411:I.Active (RADIX := Decimal);
			Pump_IO_Setpoint OF iDrive_M411:O.FreqCommand (RADIX := Decimal);
			Pump_IO_Speed OF iDrive_M411:I.OutputFreq (RADIX := Decimal);
			Pump_IO_Start OF iDrive_M411:O.Start (RADIX := Decimal);
			Pump_IO_Stop OF iDrive_M411:O.Stop (RADIX := Decimal);
			Temperature OF cAI[179] ;
			TemperatureControlValve OF cDO[403] ;
			TemperatureControlValve_IO_Closed OF iRack4:4:I.Pt10.Data (RADIX := Decimal);
			TemperatureControlValve_IO_Opened OF iRack4:4:I.Pt09.Data (RADIX := Decimal);
			TemperatureControlValve_IO_Output OF iRack4:8:O.Pt03.Data (RADIX := Decimal);
			Temperature_IO_Fault OF iRack4:1:I.Ch07.Fault (RADIX := Decimal);
			Temperature_IO_Value OF iRack4:1:I.Ch07.Data (RADIX := Float);
			temp_weight : REAL (RADIX := Float) := 9.64838086e+003;
			Unit OF cUNIT[41] ;
			Volume : REAL (RADIX := Float) := 1.01708105e+003;
			Weight OF cAI[180] ;
			Weight_AOI_Hi : SiloWeightVolume_V2  := [0,7.00000000e+001,3.29900011e-002,7.50000000e+001,0.00000000e+000,1.14219999e+001,3.60000000e+001
					,7.90000010e+000,2.68042844e+005,8.84273340e+003,9.64620876e+000,1.74620867e+000,9.64620876e+000
					,3.14159012e+000,3.60000000e+001,0.00000000e+000,1.52026426e+004,2.52840188e+005,5.01535187e+002
					,8.34119824e+003,7.90000010e+000,1.30899596e+000,6.20999985e+001];
			Weight_AOI_HiHi : SiloWeightVolume_V2  := [0,7.50000000e+001,3.29900011e-002,7.50000000e+001,0.00000000e+000,1.14219999e+001,3.60000000e+001
					,7.90000010e+000,2.88400344e+005,9.51432715e+003,9.64620876e+000,1.74620867e+000,9.64620876e+000
					,3.14159012e+000,3.60000000e+001,0.00000000e+000,1.52026426e+004,2.73197688e+005,5.01535187e+002
					,9.01279199e+003,7.90000010e+000,1.30899596e+000,6.70999985e+001];
			Weight_AOI_Lo : SiloWeightVolume_V2  := [0,8.00000000e+000,3.29900011e-002,7.50000000e+001,0.00000000e+000,1.14219999e+001,3.60000000e+001
					,7.90000010e+000,1.56097920e+004,5.14967041e+002,9.64620876e+000,1.74620867e+000,9.64620876e+000
					,3.14159012e+000,3.60000000e+001,0.00000000e+000,1.52026426e+004,4.07149689e+002,5.01535187e+002
					,1.34318686e+001,7.90000010e+000,1.30899596e+000,9.99999046e-002];
			Weight_AOI_Lolo : SiloWeightVolume_V2  := [0,2.00000000e+000,3.29900011e-002,7.50000000e+001,0.00000000e+000,1.14219999e+001,3.60000000e+001
					,7.90000010e+000,1.01708105e+003,3.35535049e+001,3.74620867e+000,1.74620867e+000,9.64620876e+000
					,3.14159012e+000,1.39809856e+001,0.00000000e+000,1.01708105e+003,0.00000000e+000,3.35535049e+001
					,0.00000000e+000,2.00000000e+000,1.30899596e+000,0.00000000e+000];
			Weight_AOI_Scaled : SiloWeightVolume_V1  := [0,5.84399300e+001,3.29900011e-002,7.00000000e+001,0.00000000e+000,0.00000000e+000,3.60000000e+001
					,1.30000000e+001,2.02651875e+005,6.68548584e+003,1.31029673e+001,1.02967262e-001,1.31029673e+001
					,3.14159012e+000,3.60000000e+001,0.00000000e+000,1.76431699e+004,1.85008700e+005,5.82048218e+002
					,6.10343750e+003,1.30000000e+001,1.22172952e+000,4.54399300e+001];
			Weight_AOI_Scaled2 : SiloWeightVolume_V2  := [0,1.19259090e+001,3.29900011e-002,7.50000000e+001,0.00000000e+000,1.14219999e+001,3.60000000e+001
					,7.90000010e+000,3.15941348e+004,1.04229053e+003,9.64620876e+000,1.74620867e+000,9.64620876e+000
					,3.14159012e+000,3.60000000e+001,0.00000000e+000,1.52026426e+004,1.63914922e+004,5.01535187e+002
					,5.40755371e+002,7.90000010e+000,1.30899596e+000,4.02590895e+000];
			Weight_AOI_ScaleHi : SiloWeightVolume_V1  := [0,7.70000000e+001,4.95800000e-002,6.00000000e+001,0.00000000e+000,0.00000000e+000,5.80000000e+001
					,3.32000008e+001,5.79847875e+005,2.87488594e+004,3.34863777e+001,2.86376953e-001,3.34863777e+001
					,3.14159012e+000,5.80000000e+001,0.00000000e+000,1.16955961e+005,4.62891938e+005,5.79867676e+003
					,2.29501816e+004,3.32000008e+001,1.04719675e+000,4.37999992e+001];
			Weight_AOI_ScaleHi2 : SiloWeightVolume_V2  := [0,7.70000000e+001,3.29900011e-002,7.50000000e+001,0.00000000e+000,1.14219999e+001,3.60000000e+001
					,7.90000010e+000,2.96543344e+005,9.78296484e+003,9.64620876e+000,1.74620867e+000,9.64620876e+000
					,3.14159012e+000,3.60000000e+001,0.00000000e+000,1.52026426e+004,2.81340688e+005,5.01535187e+002
					,9.28142969e+003,7.90000010e+000,1.30899596e+000,6.90999985e+001];
			_delete : BOOL (RADIX := Decimal) := 0;
		END_TAG

		ROUTINE DischargeValve 
				RC: "Type=$'CONTROL.MODULE$'$N"
				    "EquipmentModule=$'TANK.02.01.Valve.Fryer01StorageTank$'$N"
				    "ControlModule=$'Valve.DischargeValve$'$N"
				    "";
				N: NOP();
				RC: "$N"
				    "";
				N: XIC(ph_Fryer01AddUsedOil.CM.AutoRun[1])OTE(DischargeValve.STAT.AUTO_RUN);
				RC: "$N"
				    "";
				N: [MOV(0,DischargeValve.MSG.PERM) ,EQU(DischargeValve.MSG.PERM,0) OTE(DischargeValve.STAT.PERMISSIVE) ];
				RC: "$N"
				    "";
				N: [MOV(0,DischargeValve.MSG.INTRLK) ,XIC(EStop.STAT.FAULT) MOV(21,DischargeValve.MSG.INTRLK) ,NEQ(DischargeValve.MSG.INTRLK,0) OTE(DischargeValve.STAT.INTERLOCK) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VALVE.FAULT$'$N"
				    "Function=$'VALVE.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(DischargeValve.STAT.ENERGIZE) [XIO(DischargeValve.STAT.ON_OPEN) ,XIC(DischargeValve.STAT.OFF_CLOSED) ] ,XIO(DischargeValve.STAT.ENERGIZE) [XIC(DischargeValve.STAT.ON_OPEN) ,XIO(DischargeValve.STAT.OFF_CLOSED) ] ,XIC(DischargeValve.STAT.FAULT) ]XIO(DischargeValve.CMD.RESET)[XIC(DischargeValve.DELAY.FAULT.DN) OTE(DischargeValve.STAT.FAULT) ,TON(DischargeValve.DELAY.FAULT,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.VALVE$'$N"
				    "Function=$'STATUS.MESSAGE.VALVE$'$N"
				    "[Description]$N"
				    "";
				N: [MOV(0,DischargeValve.MSG.MSG) ,XIC(DischargeValve.STAT.ENERGIZE) XIC(DischargeValve.STAT.OFF_CLOSED) MOV(61,DischargeValve.MSG.MSG) ,XIO(DischargeValve.STAT.ENERGIZE) XIO(DischargeValve.STAT.OFF_CLOSED) MOV(62,DischargeValve.MSG.MSG) ,XIC(DischargeValve.STAT.ENERGIZE) XIO(DischargeValve.STAT.ON_OPEN) MOV(63,DischargeValve.MSG.MSG) ,XIO(DischargeValve.STAT.ENERGIZE) XIC(DischargeValve.STAT.ON_OPEN) MOV(64,DischargeValve.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.SELECT$'$N"
				    "Function=$'STATUS.MESSAGE$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(DischargeValve.STAT.AUTO_RUN) NEQ(DischargeValve.MSG.PERM,0) MOV(DischargeValve.MSG.PERM,DischargeValve.MSG.MSG) ,NEQ(DischargeValve.MSG.INTRLK,0) MOV(DischargeValve.MSG.INTRLK,DischargeValve.MSG.MSG) ,NEQ(DischargeValve.MSG.FAULT,0) MOV(DischargeValve.MSG.FAULT,DischargeValve.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.NUMBER.UNIQUE$'$N"
				    "Function=$'MAKE.CM.MESSAGENUMBER.UNIQUE$'$N"
				    "";
				N: MakeMessageNumberGloballyUnique(DischargeValve.AOI.Message,DischargeValve.ID,DischargeValve.MSG);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.OUTPUT.CONTROL$'$N"
				    "Function=$'DISCRETE.OUTPUT.CONTROL$'$N"
				    "";
				N: DiscreteOutputControl(DischargeValve.AOI.Control,DischargeValve.CMD,DischargeValve.STAT);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.IO.OUTPUT.VALVE.OPNCLS.FEEDBACK$'$N"
				    "Function=$'DISCRETE.OUTPUT.IO.VALVE$'$N"
				    "";
				N: [XIC(DischargeValve.STAT.ENERGIZE) OTE(DischargeValve_IO_Output) ,[XIO(DischargeValve.STAT.ON_OPEN_BYPASS) XIC(DischargeValve_IO_Opened) ,XIC(DischargeValve.STAT.ON_OPEN_BYPASS) XIC(DischargeValve.STAT.ENERGIZE) ] [OTE(DischargeValve.STAT.ON_OPEN) ,XIC(DischargeValve.DELAY.ON.DN) OTE(DischargeValve.STAT.ON_OPEN_DELAY) ,TON(DischargeValve.DELAY.ON,?,?) ] ,[XIO(DischargeValve.STAT.OFF_CLOSED_BYPASS) XIC(DischargeValve_IO_Closed) ,XIC(DischargeValve.STAT.OFF_CLOSED_BYPASS) XIO(DischargeValve.STAT.ENERGIZE) ] [OTE(DischargeValve.STAT.OFF_CLOSED) ,XIC(DischargeValve.DELAY.OFF.DN) OTE(DischargeValve.STAT.OFF_CLOSED_DELAY) ,TON(DischargeValve.DELAY.OFF,?,?) ] ,XIC(PowerInput.STAT.ON) XIC(PowerOutput.STAT.ON) XIC(PowerSafety.STAT.ON) OTE(DischargeValve.STAT.ControlPowerOn) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.ALARM$'$N"
				    "Function=$'ALARM.STAT.FAULT$'$N"
				    "";
				N: [XIC(DischargeValve.STAT.ControlPowerOn) XIC(DischargeValve.STAT.FAULT) OTE(DischargeValve.ALARM[0].ACTIVE) ,AlarmControl(DischargeValve.AOI.AlarmControl[0],DischargeValve.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		ROUTINE HighLevel 
				RC: "Type=$'CONTROL.MODULE$'$N"
				    "EquipmentModule=$'TANK.02.01.Level Switch.Fryer01StorageTank$'$N"
				    "ControlModule=$'Level Switch.HighLevel$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.TYPE$'$N"
				    "Function=$'SET.CM.TYPE$'$N"
				    "";
				N: MOV(0,HighLevel.TYPE)NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.IO.INPUT.BASIC$'$N"
				    "Function=$'DISCRETE.INPUT.IO.CONTROL$'$N"
				    "";
				N: [XIO(HighLevel_IO_Input) OTE(HighLevel.STAT.ENERGIZED) ,XIC(HighLevel.STAT.ENERGIZED) [XIC(HighLevel.DELAY.ON.DN) OTL(HighLevel.STAT.ON) OTU(HighLevel.STAT.OFF) ,TON(HighLevel.DELAY.ON,?,?) ] ,XIO(HighLevel.STAT.ENERGIZED) [XIC(HighLevel.DELAY.OFF.DN) OTU(HighLevel.STAT.ON) OTL(HighLevel.STAT.OFF) ,TON(HighLevel.DELAY.OFF,?,?) ] ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.FAULT.NONE$'$N"
				    "Function=$'FAULT.NONE$'$N"
				    "[Description]$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.ALARM$'$N"
				    "Function=$'ALARM.STAT.ON$'$N"
				    "";
				N: [XIC(HighLevel.STAT.ON) XIC(PowerInput.STAT.ON) OTE(HighLevel.ALARM[0].ACTIVE) ,AlarmControl(HighLevel.AOI.AlarmControl[0],HighLevel.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		ROUTINE Level 
				RC: "Type=$'CONTROL.MODULE$'$N"
				    "EquipmentModule=$'TANK.02.01.Level.Fryer01StorageTank$'$N"
				    "ControlModule=$'Level.Level$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.IO.RAW$'$N"
				    "Function=$'ANALOG.IO.RAW.TRANSFER$'$N"
				    "[Description]$N"
				    "";
				N: MOV(Level_IO_Value,Level.RAW);
				RC: "changed SCALE_HI to 401.46 per email from John Sims.$N"
				    "we had it as 0- 100 before this.$N"
				    "this needs to be verified somehow$N"
				    "";
				N: [AnalogInputScaling(Level.AOI.Scaling,Level.RAW,Level.RAW_LO,Level.RAW_HI,Level.SCALE_LO,401.463,Level.SCALED) ,MOV(3.38,Level_IO_SensorOffset) MOV(0.913171431,Level_IO_SpecificGravity) ADD(Level.SCALED,Level_IO_SensorOffset,Level.SCALED) DIV(Level.SCALED,Level_IO_SpecificGravity,Level.SCALED) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.IO.FAULT$'$N"
				    "Function=$'ANALOG.IO.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(Level_IO_Fault) ,XIC(Level.STAT.FAULT) ]XIO(Level.CMD.RESET)OTE(Level.STAT.FAULT);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.LOLO$'$N"
				    "Function=$'ANALOG.COMPARE.LOLO$'$N"
				    "[Description]$N"
				    "";
				N: [LES(Level.SCALED,Level.LoLo.LIM) ,XIC(Level.LoLo.ACTIVE) ]CMP(Level.SCALED<=(Level.LoLo.LIM+Level.LoLo.DEADBAND))[XIC(Level.LoLo.DELAY.DN) OTE(Level.LoLo.ACTIVE) ,TON(Level.LoLo.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.LO$'$N"
				    "Function=$'ANALOG.COMPARE.LO$'$N"
				    "[Description]$N"
				    "";
				N: [LES(Level.SCALED,Level.Lo.LIM) ,XIC(Level.Lo.ACTIVE) ]CMP(Level.SCALED<=(Level.Lo.LIM+Level.Lo.DEADBAND))[XIC(Level.Lo.DELAY.DN) OTE(Level.Lo.ACTIVE) ,TON(Level.Lo.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.HI$'$N"
				    "Function=$'ANALOG.COMPARE.HI$'$N"
				    "[Description]$N"
				    "";
				N: [GRT(Level.SCALED,Level.Hi.LIM) ,XIC(Level.Hi.ACTIVE) ]CMP(Level.SCALED>=(Level.Hi.LIM-Level.Hi.DEADBAND))[XIC(Level.Hi.DELAY.DN) OTE(Level.Hi.ACTIVE) ,TON(Level.Hi.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.HIHI$'$N"
				    "Function=$'ANALOG.COMPARE.HIHI$'$N"
				    "[Description]$N"
				    "";
				N: [GRT(Level.SCALED,Level.HiHi.LIM) ,XIC(Level.HiHi.ACTIVE) ]CMP(Level.SCALED>=(Level.HiHi.LIM-Level.HiHi.DEADBAND))[XIC(Level.HiHi.DELAY.DN) OTE(Level.HiHi.ACTIVE) ,TON(Level.HiHi.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.RATE.CHANGE$'$N"
				    "Function=$'ANALOG.RATE.CHANGE$'$N"
				    "[Description]$N"
				    "";
				N: AnalogInputRate(Level.AOI.Rate,Level.SCALED,Level.RATE);
				RC: "$N"
				    "";
				N: [LES(Level.RATE.CHANGE,Level.RATE.Lo.LIM) ,XIC(Level.RATE.Lo.ACTIVE) ]CMP(Level.RATE.CHANGE<=(Level.RATE.Lo.LIM+Level.RATE.Lo.DEADBAND))[XIC(Level.RATE.Lo.DELAY.DN) OTE(Level.RATE.Lo.ACTIVE) ,TON(Level.RATE.Lo.DELAY,?,?) ];
				RC: "$N"
				    "";
				N: [LES(Level.RATE.CHANGE,Level.RATE.LoLo.LIM) ,XIC(Level.RATE.LoLo.ACTIVE) ]CMP(Level.RATE.CHANGE<=(Level.RATE.LoLo.LIM+Level.RATE.LoLo.DEADBAND))[XIC(Level.RATE.LoLo.DELAY.DN) OTE(Level.RATE.LoLo.ACTIVE) ,TON(Level.RATE.LoLo.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.FAULT$'$N"
				    "Function=$'ANALOG.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: XIC(Level.STAT.FAULT)[XIC(Level.Fault.DELAY.DN) OTE(Level.Fault.ACTIVE) ,MOV(10000,Level.Fault.DELAY.PRE) TON(Level.Fault.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.MODE$'$N"
				    "Function=$'ANALOG.MODE$'$N"
				    "[Description]$N"
				    "";
				N: AnalogInputMode(Level.AOI.Mode,Level.CMD,Level.STAT,Level.MAN_SP,Level.SCALED);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.LOLO$'$N"
				    "";
				N: [XIC(Level.LoLo.ACTIVE) XIO(Level.LoLo.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[0].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[0],Level.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.LO$'$N"
				    "";
				N: [XIC(Level.Lo.ACTIVE) XIO(Level.Lo.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[1].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[1],Level.ALARM[1],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.HI$'$N"
				    "";
				N: [XIC(Level.Hi.ACTIVE) XIO(Level.Hi.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[2].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[2],Level.ALARM[2],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.HIHI$'$N"
				    "";
				N: [XIC(Level.HiHi.ACTIVE) XIO(Level.HiHi.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[3].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[3],Level.ALARM[3],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.RATE.LO$'$N"
				    "";
				N: [XIC(Level.RATE.Lo.ACTIVE) XIO(Level.RATE.Lo.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[4].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[4],Level.ALARM[4],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.RATE.LOLO$'$N"
				    "";
				N: [XIC(Level.RATE.LoLo.ACTIVE) XIO(Level.RATE.LoLo.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[5].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[5],Level.ALARM[5],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.FAULT$'$N"
				    "";
				N: [XIC(Level.Fault.ACTIVE) XIO(Level.Fault.DISABLED) XIC(PowerInput.STAT.ON) OTE(Level.ALARM[6].ACTIVE) ,AlarmControl(Level.AOI.AlarmControl[6],Level.ALARM[6],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		ROUTINE Pump 
				RC: "Type=$'CONTROL.MODULE$'$N"
				    "EquipmentModule=$'TANK.02.01.VFD.Fryer01StorageTank$'$N"
				    "ControlModule=$'VFD.Pump$'$N"
				    "";
				N: NOP();
				RC: "$N"
				    "";
				N: XIC(ph_Fryer01AddUsedOil.CM.AutoRun[10])OTE(Pump.STAT.AUTO_RUN);
				RC: "$N"
				    "";
				N: [MOV(0,Pump.MSG.PERM) ,XIC(Level.LoLo.ACTIVE) MOV(1,Pump.MSG.PERM) ,XIC(Level.Fault.ACTIVE) MOV(2,Pump.MSG.PERM) ,EQU(Pump.MSG.PERM,0) OTE(Pump.STAT.PERMISSIVE) ];
				RC: "$N"
				    "";
				N: [MOV(0,Pump.MSG.INTRLK) ,XIC(EStop.STAT.FAULT) MOV(21,Pump.MSG.INTRLK) ,XIC(DischargeValve.STAT.ON_OPEN) MOV(22,Pump.MSG.PERM) ,XIC(DischargeValve.STAT.FAULT) MOV(23,Pump.MSG.PERM) ,NEQ(Pump.MSG.INTRLK,0) OTE(Pump.STAT.INTERLOCK) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VFD.FAULT$'$N"
				    "Function=$'VFD.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(Pump.STAT.ENERGIZE) [XIO(Pump.STAT.ON_OPEN) ,XIC(Pump.STAT.OFF_CLOSED) ] ,XIO(Pump.STAT.ENERGIZE) [XIC(Pump.STAT.ON_OPEN) ,XIO(Pump.STAT.OFF_CLOSED) ] ,XIC(Pump.STAT.VFD_FAULT) ,XIC(Pump.STAT.FAULT) ]XIO(Pump.CMD.RESET)[XIC(Pump.DELAY.FAULT.DN) OTE(Pump.STAT.FAULT) ,TON(Pump.DELAY.FAULT,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.VFD$'$N"
				    "Function=$'STATUS.MESSAGE.VFD$'$N"
				    "[Description]$N"
				    "";
				N: [MOV(0,Pump.MSG.MSG) ,XIC(Pump.STAT.ENERGIZE) XIO(Pump.STAT.ON_OPEN) MOV(61,Pump.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.SELECT$'$N"
				    "Function=$'STATUS.MESSAGE$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(Pump.STAT.AUTO_RUN) NEQ(Pump.MSG.PERM,0) MOV(Pump.MSG.PERM,Pump.MSG.MSG) ,NEQ(Pump.MSG.INTRLK,0) MOV(Pump.MSG.INTRLK,Pump.MSG.MSG) ,NEQ(Pump.MSG.FAULT,0) MOV(Pump.MSG.FAULT,Pump.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.NUMBER.UNIQUE$'$N"
				    "Function=$'MAKE.CM.MESSAGENUMBER.UNIQUE$'$N"
				    "";
				N: MakeMessageNumberGloballyUnique(Pump.AOI.Message,Pump.ID,Pump.MSG);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.OUTPUT.CONTROL$'$N"
				    "Function=$'DISCRETE.OUTPUT.CONTROL$'$N"
				    "";
				N: DiscreteOutputControl(Pump.AOI.Control,Pump.CMD,Pump.STAT);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VFD.SPEED.SETPOINT$'$N"
				    "Function=$'VFD.SPEED.SETPOINT$'$N"
				    "[Description]$N"
				    "";
				N: MOV(PumpSpeedReference.SP_MAN,PumpSpeedReference.SP);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VFD.SPEED.CV$'$N"
				    "Function=$'VFD.SPEED.CV$'$N"
				    "[Description]$N"
				    "";
				N: [MOV(0,PumpSpeedReference.CV) ,XIC(Pump.STAT.AUTO) XIC(Pump.STAT.ENERGIZE) MOV(PumpSpeedReference.SP,PumpSpeedReference.CV) ,XIC(Pump.STAT.MAN) XIC(Pump.STAT.ENERGIZE) MOV(PumpSpeedReference.CV_MAN,PumpSpeedReference.CV) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VFD.IO.OUTPUT$'$N"
				    "Function=$'VFD.IO.CONTROL$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(Pump.STAT.ENERGIZE) OTE(Pump_IO_Start) ,XIO(Pump.STAT.ENERGIZE) OTE(Pump_IO_Stop) ,[XIO(Pump.STAT.ON_OPEN_BYPASS) XIC(Pump_IO_Running) ,XIC(Pump.STAT.ON_OPEN_BYPASS) XIC(Pump.STAT.ENERGIZE) ] [OTE(Pump.STAT.ON_OPEN) ,XIC(Pump.DELAY.ON.DN) OTE(Pump.STAT.ON_OPEN_DELAY) ,TON(Pump.DELAY.ON,?,?) ] ,[XIO(Pump.STAT.OFF_CLOSED_BYPASS) XIO(Pump_IO_Running) ,XIC(Pump.STAT.OFF_CLOSED_BYPASS) XIO(Pump.STAT.ENERGIZE) ] [OTE(Pump.STAT.OFF_CLOSED) ,XIC(Pump.DELAY.OFF.DN) OTE(Pump.STAT.OFF_CLOSED_DELAY) ,TON(Pump.DELAY.OFF,?,?) ] ,XIC(Pump_IO_Faulted) XIO(cCOMMON.FirstScan.AlarmInhibit) OTE(Pump.STAT.VFD_FAULT) ,[XIC(Pump.CMD.RESET) ,XIC(cCOMMON.FirstScan.ResetFaultToVFD) ,XIC(Pump_IO_ClearFaults) ] XIC(Pump_IO_Faulted) OTE(Pump_IO_ClearFaults) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VFD.IO.SPEED$'$N"
				    "Function=$'VFD.IO.SPEED$'$N"
				    "[Description]$N"
				    "";
				N: [MUL(PumpSpeedReference.CV,100,Pump_IO_Setpoint) ,DIV(Pump_IO_Speed,100,PumpSpeedReference.CV_ACTUAL) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.ALARM$'$N"
				    "Function=$'ALARM.STAT.FAULT$'$N"
				    "";
				N: [XIC(Pump.STAT.FAULT) OTE(Pump.ALARM[0].ACTIVE) ,AlarmControl(Pump.AOI.AlarmControl[0],Pump.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.ALARM$'$N"
				    "Function=$'ALARM.STAT.DISCONNECT$'$N"
				    "";
				N: [XIO(Pump.STAT.DISCONNECT) OTE(Pump.ALARM[1].ACTIVE) ,AlarmControl(Pump.AOI.AlarmControl[1],Pump.ALARM[1],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.ALARM$'$N"
				    "Function=$'ALARM.STAT.VFD_FAULT$'$N"
				    "";
				N: [XIC(PowerSafety.STAT.ON) XIC(Pump.STAT.VFD_FAULT) OTE(Pump.ALARM[2].ACTIVE) ,AlarmControl(Pump.AOI.AlarmControl[2],Pump.ALARM[2],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		ROUTINE Temperature 
				RC: "Type=$'CONTROL.MODULE$'$N"
				    "EquipmentModule=$'TANK.02.01.Temperature.Fryer01StorageTank$'$N"
				    "ControlModule=$'Temperature.Temperature$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.TYPE$'$N"
				    "Function=$'SET.CM.TYPE$'$N"
				    "";
				N: MOV(0,Temperature.TYPE)MOV(63,Temperature.DISPLAY_MASK.BITS)NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.IO.RAW$'$N"
				    "Function=$'ANALOG.IO.RAW.TRANSFER$'$N"
				    "[Description]$N"
				    "";
				N: MOV(Temperature_IO_Value,Temperature.RAW);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.SCALE$'$N"
				    "Function=$'ANALOG.SCALE.RAW$'$N"
				    "[Description]$N"
				    "";
				N: AnalogInputScaling(Temperature.AOI.Scaling,Temperature.RAW,Temperature.RAW_LO,Temperature.RAW_HI,Temperature.SCALE_LO,Temperature.SCALE_HI,Temperature.SCALED);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.IO.FAULT$'$N"
				    "Function=$'ANALOG.IO.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(Temperature_IO_Fault) ,XIC(Temperature.STAT.FAULT) ]XIO(Temperature.CMD.RESET)OTE(Temperature.STAT.FAULT);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.LOLO$'$N"
				    "Function=$'ANALOG.COMPARE.LOLO$'$N"
				    "[Description]$N"
				    "";
				N: [LES(Temperature.SCALED,Temperature.LoLo.LIM) ,XIC(Temperature.LoLo.ACTIVE) ]CMP(Temperature.SCALED<=(Temperature.LoLo.LIM+Temperature.LoLo.DEADBAND))[XIC(Temperature.LoLo.DELAY.DN) OTE(Temperature.LoLo.ACTIVE) ,TON(Temperature.LoLo.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.LO$'$N"
				    "Function=$'ANALOG.COMPARE.LO$'$N"
				    "[Description]$N"
				    "";
				N: [LES(Temperature.SCALED,Temperature.Lo.LIM) ,XIC(Temperature.Lo.ACTIVE) ]CMP(Temperature.SCALED<=(Temperature.Lo.LIM+Temperature.Lo.DEADBAND))[XIC(Temperature.Lo.DELAY.DN) OTE(Temperature.Lo.ACTIVE) ,TON(Temperature.Lo.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.HI$'$N"
				    "Function=$'ANALOG.COMPARE.HI$'$N"
				    "[Description]$N"
				    "";
				N: [GRT(Temperature.SCALED,Temperature.Hi.LIM) ,XIC(Temperature.Hi.ACTIVE) ]CMP(Temperature.SCALED>=(Temperature.Hi.LIM-Temperature.Hi.DEADBAND))[XIC(Temperature.Hi.DELAY.DN) OTE(Temperature.Hi.ACTIVE) ,TON(Temperature.Hi.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.COMPARE.HIHI$'$N"
				    "Function=$'ANALOG.COMPARE.HIHI$'$N"
				    "[Description]$N"
				    "";
				N: [GRT(Temperature.SCALED,Temperature.HiHi.LIM) ,XIC(Temperature.HiHi.ACTIVE) ]CMP(Temperature.SCALED>=(Temperature.HiHi.LIM-Temperature.HiHi.DEADBAND))[XIC(Temperature.HiHi.DELAY.DN) OTE(Temperature.HiHi.ACTIVE) ,TON(Temperature.HiHi.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.RATE.CHANGE$'$N"
				    "Function=$'ANALOG.RATE.CHANGE$'$N"
				    "[Description]$N"
				    "";
				N: AnalogInputRate(Temperature.AOI.Rate,Temperature.SCALED,Temperature.RATE);
				RC: "$N"
				    "";
				N: [LES(Temperature.RATE.CHANGE,Temperature.RATE.Lo.LIM) ,XIC(Temperature.RATE.Lo.ACTIVE) ]CMP(Temperature.RATE.CHANGE<=(Temperature.RATE.Lo.LIM+Temperature.RATE.Lo.DEADBAND))[XIC(Temperature.RATE.Lo.DELAY.DN) OTE(Temperature.RATE.Lo.ACTIVE) ,TON(Temperature.RATE.Lo.DELAY,?,?) ];
				RC: "$N"
				    "";
				N: [LES(Temperature.RATE.CHANGE,Temperature.RATE.LoLo.LIM) ,XIC(Temperature.RATE.LoLo.ACTIVE) ]CMP(Temperature.RATE.CHANGE<=(Temperature.RATE.LoLo.LIM+Temperature.RATE.LoLo.DEADBAND))[XIC(Temperature.RATE.LoLo.DELAY.DN) OTE(Temperature.RATE.LoLo.ACTIVE) ,TON(Temperature.RATE.LoLo.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.FAULT$'$N"
				    "Function=$'ANALOG.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: XIC(Temperature.STAT.FAULT)[XIC(Temperature.Fault.DELAY.DN) OTE(Temperature.Fault.ACTIVE) ,MOV(10000,Temperature.Fault.DELAY.PRE) TON(Temperature.Fault.DELAY,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.MODE$'$N"
				    "Function=$'ANALOG.MODE$'$N"
				    "[Description]$N"
				    "";
				N: AnalogInputMode(Temperature.AOI.Mode,Temperature.CMD,Temperature.STAT,Temperature.MAN_SP,Temperature.SCALED);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.LOLO$'$N"
				    "";
				N: [XIC(Temperature.LoLo.ACTIVE) XIO(Temperature.LoLo.DISABLED) XIC(PowerInput.STAT.ON) OTE(Temperature.ALARM[0].ACTIVE) ,AlarmControl(Temperature.AOI.AlarmControl[0],Temperature.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.LO$'$N"
				    "";
				N: [XIC(Temperature.Lo.ACTIVE) XIO(Temperature.Lo.DISABLED) XIC(PowerInput.STAT.ON) OTE(Temperature.ALARM[1].ACTIVE) ,AlarmControl(Temperature.AOI.AlarmControl[1],Temperature.ALARM[1],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.HI$'$N"
				    "";
				N: [XIC(Temperature.Hi.ACTIVE) XIO(Temperature.Hi.DISABLED) XIC(PowerInput.STAT.ON) OTE(Temperature.ALARM[2].ACTIVE) ,AlarmControl(Temperature.AOI.AlarmControl[2],Temperature.ALARM[2],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.HIHI$'$N"
				    "";
				N: [XIC(Temperature.HiHi.ACTIVE) XIO(Temperature.HiHi.DISABLED) XIC(PowerInput.STAT.ON) OTE(Temperature.ALARM[3].ACTIVE) ,AlarmControl(Temperature.AOI.AlarmControl[3],Temperature.ALARM[3],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.ANALOG.ALARM$'$N"
				    "Function=$'ALARM.FAULT$'$N"
				    "";
				N: [XIC(Temperature.Fault.ACTIVE) XIO(Temperature.Fault.DISABLED) XIC(PowerInput.STAT.ON) OTE(Temperature.ALARM[6].ACTIVE) ,AlarmControl(Temperature.AOI.AlarmControl[6],Temperature.ALARM[6],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		ROUTINE TemperatureControlValve 
				RC: "Type=$'CONTROL.MODULE$'$N"
				    "EquipmentModule=$'TANK.02.01.Valve.Fryer01StorageTank$'$N"
				    "ControlModule=$'Valve.TemperatureControlValve$'$N"
				    "";
				N: NOP();
				RC: "$N"
				    "";
				N: XIC(TemperatureControlValve.STAT.AUTO)[XIC(Temperature.Lo.ACTIVE) ,XIC(TemperatureControlValve.STAT.AUTO_RUN) ]XIO(Temperature.Hi.ACTIVE)OTE(TemperatureControlValve.STAT.AUTO_RUN);
				RC: "$N"
				    "";
				N: [MOV(0,TemperatureControlValve.MSG.PERM) ,XIC(Temperature.Fault.ACTIVE) MOV(22,TemperatureControlValve.MSG.PERM) ,EQU(TemperatureControlValve.MSG.PERM,0) OTE(TemperatureControlValve.STAT.PERMISSIVE) ];
				RC: "$N"
				    "";
				N: [MOV(0,TemperatureControlValve.MSG.INTRLK) ,XIC(EStop.STAT.FAULT) MOV(21,TemperatureControlValve.MSG.INTRLK) ,NEQ(TemperatureControlValve.MSG.INTRLK,0) OTE(TemperatureControlValve.STAT.INTERLOCK) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.VALVE.FAULT$'$N"
				    "Function=$'VALVE.FAULT$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(TemperatureControlValve.STAT.ENERGIZE) [XIO(TemperatureControlValve.STAT.ON_OPEN) ,XIC(TemperatureControlValve.STAT.OFF_CLOSED) ] ,XIO(TemperatureControlValve.STAT.ENERGIZE) [XIC(TemperatureControlValve.STAT.ON_OPEN) ,XIO(TemperatureControlValve.STAT.OFF_CLOSED) ] ,XIC(TemperatureControlValve.STAT.FAULT) ]XIO(TemperatureControlValve.CMD.RESET)[XIC(TemperatureControlValve.DELAY.FAULT.DN) OTE(TemperatureControlValve.STAT.FAULT) ,TON(TemperatureControlValve.DELAY.FAULT,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.VALVE$'$N"
				    "Function=$'STATUS.MESSAGE.VALVE$'$N"
				    "[Description]$N"
				    "";
				N: [MOV(0,TemperatureControlValve.MSG.MSG) ,XIC(TemperatureControlValve.STAT.ENERGIZE) XIC(TemperatureControlValve.STAT.OFF_CLOSED) MOV(61,TemperatureControlValve.MSG.MSG) ,XIO(TemperatureControlValve.STAT.ENERGIZE) XIO(TemperatureControlValve.STAT.OFF_CLOSED) MOV(62,TemperatureControlValve.MSG.MSG) ,XIC(TemperatureControlValve.STAT.ENERGIZE) XIO(TemperatureControlValve.STAT.ON_OPEN) MOV(63,TemperatureControlValve.MSG.MSG) ,XIO(TemperatureControlValve.STAT.ENERGIZE) XIC(TemperatureControlValve.STAT.ON_OPEN) MOV(64,TemperatureControlValve.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.SELECT$'$N"
				    "Function=$'STATUS.MESSAGE$'$N"
				    "[Description]$N"
				    "";
				N: [XIC(TemperatureControlValve.STAT.AUTO_RUN) NEQ(TemperatureControlValve.MSG.PERM,0) MOV(TemperatureControlValve.MSG.PERM,TemperatureControlValve.MSG.MSG) ,NEQ(TemperatureControlValve.MSG.INTRLK,0) MOV(TemperatureControlValve.MSG.INTRLK,TemperatureControlValve.MSG.MSG) ,NEQ(TemperatureControlValve.MSG.FAULT,0) MOV(TemperatureControlValve.MSG.FAULT,TemperatureControlValve.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.STATUS.MESSAGE.NUMBER.UNIQUE$'$N"
				    "Function=$'MAKE.CM.MESSAGENUMBER.UNIQUE$'$N"
				    "";
				N: MakeMessageNumberGloballyUnique(TemperatureControlValve.AOI.Message,TemperatureControlValve.ID,TemperatureControlValve.MSG);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.OUTPUT.CONTROL$'$N"
				    "Function=$'DISCRETE.OUTPUT.CONTROL$'$N"
				    "";
				N: DiscreteOutputControl(TemperatureControlValve.AOI.Control,TemperatureControlValve.CMD,TemperatureControlValve.STAT);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.IO.OUTPUT.VALVE.OPNCLS.FEEDBACK$'$N"
				    "Function=$'DISCRETE.OUTPUT.IO.VALVE$'$N"
				    "";
				N: [XIC(TemperatureControlValve.STAT.ENERGIZE) OTE(TemperatureControlValve_IO_Output) ,[XIO(TemperatureControlValve.STAT.ON_OPEN_BYPASS) XIC(TemperatureControlValve_IO_Opened) ,XIC(TemperatureControlValve.STAT.ON_OPEN_BYPASS) XIC(TemperatureControlValve.STAT.ENERGIZE) ] [OTE(TemperatureControlValve.STAT.ON_OPEN) ,XIC(TemperatureControlValve.DELAY.ON.DN) OTE(TemperatureControlValve.STAT.ON_OPEN_DELAY) ,TON(TemperatureControlValve.DELAY.ON,?,?) ] ,[XIO(TemperatureControlValve.STAT.OFF_CLOSED_BYPASS) XIC(TemperatureControlValve_IO_Closed) ,XIC(TemperatureControlValve.STAT.OFF_CLOSED_BYPASS) XIO(TemperatureControlValve.STAT.ENERGIZE) ] [OTE(TemperatureControlValve.STAT.OFF_CLOSED) ,XIC(TemperatureControlValve.DELAY.OFF.DN) OTE(TemperatureControlValve.STAT.OFF_CLOSED_DELAY) ,TON(TemperatureControlValve.DELAY.OFF,?,?) ] ,XIC(PowerInput.STAT.ON) XIC(PowerOutput.STAT.ON) XIC(PowerSafety.STAT.ON) OTE(TemperatureControlValve.STAT.ControlPowerOn) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.CM.DISCRETE.ALARM$'$N"
				    "Function=$'ALARM.STAT.FAULT$'$N"
				    "";
				N: [XIC(TemperatureControlValve.STAT.ControlPowerOn) XIC(TemperatureControlValve.STAT.FAULT) OTE(TemperatureControlValve.ALARM[0].ACTIVE) ,AlarmControl(TemperatureControlValve.AOI.AlarmControl[0],TemperatureControlValve.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		ROUTINE Weight 
				N: NOP();
				N: XIO(Weight.TMR[0].DN)MOV(5000,Weight.TMR[0].PRE)TON(Weight.TMR[0],?,?);
				N: XIC(Weight.TMR[0].DN)SiloWeightVolume_V2(Weight_AOI_Scaled2,Level.SCALED,0.03299,75,0,11.422,36,7.9,Volume,Weight.SCALED)TRN(Weight.SCALED,Weight.SCALED)[MOD(Weight.SCALED,100,ModuloResult) SUB(Weight.SCALED,ModuloResult,Weight.SCALED) ,GEQ(ModuloResult,50) ADD(Weight.SCALED,100,Weight.SCALED) ];
				N: XIC(Weight.TMR[0].DN)SiloWeightVolume_V2(Weight_AOI_ScaleHi2,Level.SCALE_HI,0.03299,75,0,11.422,36,7.9,Volume,Weight.SCALE_HI)TRN(Weight.SCALE_HI,Weight.SCALE_HI)[MOD(Weight.SCALE_HI,100,ModuloResult) SUB(Weight.SCALE_HI,ModuloResult,Weight.SCALE_HI) ,GEQ(ModuloResult,50) ADD(Weight.SCALE_HI,100,Weight.SCALE_HI) ];
				N: XIC(Weight.TMR[0].DN)SiloWeightVolume_V2(Weight_AOI_HiHi,Level.HiHi.LIM,0.03299,75,0,11.422,36,7.9,Volume,Weight.HiHi.LIM)TRN(Weight.HiHi.LIM,Weight.HiHi.LIM)[MOD(Weight.HiHi.LIM,100,ModuloResult) SUB(Weight.HiHi.LIM,ModuloResult,Weight.HiHi.LIM) ,GEQ(ModuloResult,50) ADD(Weight.HiHi.LIM,100,Weight.HiHi.LIM) ];
				N: XIC(Weight.TMR[0].DN)SiloWeightVolume_V2(Weight_AOI_Hi,Level.Hi.LIM,0.03299,75,0,11.422,36,7.9,Volume,Weight.Hi.LIM)TRN(Weight.Hi.LIM,Weight.Hi.LIM)[MOD(Weight.Hi.LIM,100,ModuloResult) SUB(Weight.Hi.LIM,ModuloResult,Weight.Hi.LIM) ,GEQ(ModuloResult,50) ADD(Weight.Hi.LIM,100,Weight.Hi.LIM) ];
				N: XIC(Weight.TMR[0].DN)SiloWeightVolume_V2(Weight_AOI_Lo,Level.Lo.LIM,0.03299,75,0,11.422,36,7.9,Volume,Weight.Lo.LIM)TRN(Weight.Lo.LIM,Weight.Lo.LIM)[MOD(Weight.Lo.LIM,100,ModuloResult) SUB(Weight.Lo.LIM,ModuloResult,Weight.Lo.LIM) ,GEQ(ModuloResult,50) ADD(Weight.Lo.LIM,100,Weight.Lo.LIM) ];
				N: XIC(Weight.TMR[0].DN)SiloWeightVolume_V2(Weight_AOI_Lolo,Level.LoLo.LIM,0.03299,75,0,11.422,36,7.9,Volume,Weight.LoLo.LIM)TRN(Weight.LoLo.LIM,Weight.LoLo.LIM)[MOD(Weight.LoLo.LIM,100,ModuloResult) SUB(Weight.LoLo.LIM,ModuloResult,Weight.LoLo.LIM) ,GEQ(ModuloResult,50) ADD(Weight.LoLo.LIM,100,Weight.LoLo.LIM) ];
				N: [LES(Weight.SCALED,Weight.LoLo.LIM) ,XIC(Weight.LoLo.ACTIVE) ]CMP(Weight.SCALED<=(Weight.LoLo.LIM+Weight.LoLo.DEADBAND))[XIC(Weight.LoLo.DELAY.DN) OTE(Weight.LoLo.ACTIVE) ,TON(Weight.LoLo.DELAY,?,?) ];
				N: [LES(Weight.SCALED,Weight.Lo.LIM) ,XIC(Weight.Lo.ACTIVE) ]CMP(Weight.SCALED<=(Weight.Lo.LIM+Weight.Lo.DEADBAND))[XIC(Weight.Lo.DELAY.DN) OTE(Weight.Lo.ACTIVE) ,TON(Weight.Lo.DELAY,?,?) ];
				N: [GRT(Weight.SCALED,Weight.Hi.LIM) ,XIC(Weight.Hi.ACTIVE) ]CMP(Weight.SCALED>=(Weight.Hi.LIM-Weight.Hi.DEADBAND))[XIC(Weight.Hi.DELAY.DN) OTE(Weight.Hi.ACTIVE) ,TON(Weight.Hi.DELAY,?,?) ];
				N: [GRT(Weight.SCALED,Weight.HiHi.LIM) ,XIC(Weight.HiHi.ACTIVE) ]CMP(Weight.SCALED>=(Weight.HiHi.LIM-Weight.HiHi.DEADBAND))[XIC(Weight.HiHi.DELAY.DN) OTE(Weight.HiHi.ACTIVE) ,TON(Weight.HiHi.DELAY,?,?) ];
				N: AnalogInputRate(Weight.AOI.Rate,Weight.SCALED,Weight.RATE);
				N: [LES(Weight.RATE.CHANGE,Weight.RATE.Lo.LIM) ,XIC(Weight.RATE.Lo.ACTIVE) ]CMP(Weight.RATE.CHANGE<=(Weight.RATE.Lo.LIM+Weight.RATE.Lo.DEADBAND))[XIC(Weight.RATE.Lo.DELAY.DN) OTE(Weight.RATE.Lo.ACTIVE) ,TON(Weight.RATE.Lo.DELAY,?,?) ];
				N: [LES(Weight.RATE.CHANGE,Weight.RATE.LoLo.LIM) ,XIC(Weight.RATE.LoLo.ACTIVE) ]CMP(Weight.RATE.CHANGE<=(Weight.RATE.LoLo.LIM+Weight.RATE.LoLo.DEADBAND))[XIC(Weight.RATE.LoLo.DELAY.DN) OTE(Weight.RATE.LoLo.ACTIVE) ,TON(Weight.RATE.LoLo.DELAY,?,?) ];
		END_ROUTINE

		ROUTINE _FirstScan 
				RC: "$N"
				    "Program=$'EM$'$N"
				    "Class=$'TANK.02.01$'$N"
				    "";
				N: NOP();
		END_ROUTINE

		ROUTINE _Main 
				RC: "$N"
				    "Program=$'EM$'$N"
				    "Class=$'TANK.02.01$'$N"
				    "";
				N: NOP();
				RC: "$N"
				    "Program=$'CM$'$N"
				    "Class=$'LEVEL$'$N"
				    "Type=$'AI$'$N"
				    "Device=$'LT400$'$N"
				    "[Description]:Level$N"
				    "";
				N: JSR(Level,0);
				RC: "$N"
				    "Program=$'CM$'$N"
				    "Class=$'VALVE$'$N"
				    "Type=$'DO$'$N"
				    "Device=$'AV404$'$N"
				    "[Description]:Discharge Valve$N"
				    "";
				N: JSR(DischargeValve,0);
				RC: "$N"
				    "Program=$'CM$'$N"
				    "Class=$'TEMPERATURE$'$N"
				    "Type=$'AI$'$N"
				    "Device=$'TT405$'$N"
				    "[Description]:Temperature$N"
				    "";
				N: JSR(Temperature,0);
				RC: "$N"
				    "Program=$'CM$'$N"
				    "Class=$'VALVE$'$N"
				    "Type=$'DO$'$N"
				    "Device=$'AV403$'$N"
				    "[Description]:Temperature Control Valve$N"
				    "";
				N: JSR(TemperatureControlValve,0);
				RC: "$N"
				    "Program=$'CM$'$N"
				    "Class=$'VFD$'$N"
				    "Type=$'DO$'$N"
				    "Device=$'M411$'$N"
				    "[Description]:Pump$N"
				    "";
				N: JSR(Pump,0);
				RC: "$N"
				    "Program=$'CM$'$N"
				    "Class=$'LEVELSWITCH$'$N"
				    "Type=$'DI$'$N"
				    "Device=$'LI406$'$N"
				    "[Description]:High Level$N"
				    "";
				N: JSR(HighLevel,0);
				N: JSR(Weight,0);
				RC: "$N"
				    "First Scan Routine Call$N"
				    "This routine will set all defaut configurations for the equipment module and control module settings and parameters.$N"
				    "";
				N: XIC(S:FS)JSR(_FirstScan,0);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM
