	PROGRAM Mixer09_BatchA (Description := "$N Program=$'EM.MIXER09_BATCHA$'$N",
	                        MAIN := "_Main",
	                        MODE := 0,
	                        DisableFlag := 0,
	                        UseAsFolder := 0)
		TAG
			Batch OF cLINE[7] ;
			BatchProcedurePhase : BatchProcedurePhase  := [1,0,0,15,10,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,0];
			BatchProcedureUnit : BatchProcedureUnit[11]  := [[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0
					],[1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0]];
			BatchView OF Batch.View ;
			C : DINT (RADIX := Decimal) := 1;
			Debug : DINT[11] (RADIX := Decimal) := [0,0,0,0,0,0,0,0,0,0,0];
			iPhaseArrayIndex : DINT (RADIX := Decimal) := 0;
			iTotalActual : REAL (RADIX := Float) := 0.00000000e+000;
			iTotalTarget : REAL (RADIX := Float) := 0.00000000e+000;
			iUnitArrayIndex : DINT (RADIX := Decimal) := 0;
			iV : DINT (RADIX := Decimal) := 0;
			iW : DINT (RADIX := Decimal) := 0;
			MaxUnitProcedures OF cSETUP.NO_STEPS_UNIT (RADIX := Decimal);
			MaxUnitProcedureSteps OF cSETUP.NO_STEPS_PHASE (RADIX := Decimal);
			MessageToggle : MessageToggle  := [0,107711];
			MinorsHopper OF cUNIT[59] ;
			Mixer OF cUNIT[58] ;
			OtherBatch OF cLINE[8] ;
			p : DINT (RADIX := Decimal) := 0;
			ph_AddCityWater OF cPHZ[76] ;
			ph_AddCityWater_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_AddPowderedSugar OF cPHZ[85] ;
			ph_AddPowderedSugar_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_AddShortening OF cPHZ[77] ;
			ph_AddShortening_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_AddSugar OF cPHZ[86] ;
			ph_AddSugar_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_ConfirmStart OF cPHZ[97] ;
			ph_ConfirmStart_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_HandAdd OF cPHZ[79] ;
			ph_HandAdd_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_Heat OF cPHZ[96] ;
			ph_Heat_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_RunHighSheer OF cPHZ[80] ;
			ph_RunHighSheer_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_RunSweep OF cPHZ[81] ;
			ph_RunSweep_ClearMSG : BOOL (RADIX := Decimal) := 1;
			ph_SugarHopperDump OF cPHZ[82] ;
			ph_SugarHopperDump_ClearMSG : BOOL (RADIX := Decimal) := 1;
			ph_SugarHopperReadyToDump OF cPHZ[83] ;
			ph_SugarHopperReadyToDump_ClearMSG : BOOL (RADIX := Decimal) := 1;
			ph_TimeDelay OF cPHZ[84] ;
			ph_TimeDelay_ClearMSG : BOOL (RADIX := Decimal) := 0;
			ph_Transfer OF cPHZ[78] ;
			ph_Transfer_ClearMSG : BOOL (RADIX := Decimal) := 0;
			Schedule OF cSCHEDULE[7] ;
			TempProgress : CB_BatchView_Phase_Progress  := [0.00000000e+000,0.00000000e+000,0.00000000e+000,[[1,0,0],[[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0],0,0]],0,0,0,0];
		END_TAG

		ROUTINE _050_Running 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: MOV(0,C)LIM(1,Batch.CAMPAIGN_INDEX,cSETUP.NO_CAMPAIGN)MOV(Batch.CAMPAIGN_INDEX,C);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Batch.STATE.Oneshot.Complete)ADD(Batch.ACTUAL[1],Schedule.CAMPAIGN[C].ACTUAL[1],Schedule.CAMPAIGN[C].ACTUAL[1]);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: MUL(Schedule.CAMPAIGN[C].BATCH.REQUIRED,Batch.SPT[1],Schedule.CAMPAIGN[C].SPT[1]);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Batch.STEP.COMPLETE)OTE(Batch.STAT.RUNNING_COMPLETE);
		END_ROUTINE

		ROUTINE _110_UnitProcedures 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				N: [MOV(1,Mixer.TYPE) MOV(1,Mixer.CLASS) ,MOV(3,MinorsHopper.TYPE) MOV(3,MinorsHopper.CLASS) ];
				RC: "$N"
				    "";
				N: [MOV(MinorsHopper.ARRAY_INDEX,Batch.RECIPE.STEP_NEEDS[2].UNIT_INDEX) MOV(MinorsHopper.ARRAY_INDEX,Batch.REC_BUF.RECIPE.STEP_NEEDS[2].UNIT_INDEX) ,MOV(Mixer.ARRAY_INDEX,Batch.RECIPE.STEP_NEEDS[1].UNIT_INDEX) MOV(Mixer.ARRAY_INDEX,Batch.REC_BUF.RECIPE.STEP_NEEDS[1].UNIT_INDEX) ];
				RC: "$N"
				    "";
				N: [XIC(MinorsHopper.STAT.PHASE_HELD) EQU(MinorsHopper.INDEX,Batch.ARRAY_INDEX) ,XIC(Mixer.STAT.PHASE_HELD) EQU(Mixer.INDEX,Batch.ARRAY_INDEX) ]OTE(Batch.STAT.PHASE_HELD);
				RC: "$N"
				    "";
				N: [XIC(MinorsHopper.STAT.OUT_TOL) EQU(MinorsHopper.INDEX,Batch.ARRAY_INDEX) ,XIC(Mixer.STAT.OUT_TOL) EQU(Mixer.INDEX,Batch.ARRAY_INDEX) ]OTE(Batch.STAT.OUT_TOL);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.UNITPROCEDURES.OUTOFTOLERENCE.PROMPT$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [XIC(Batch.STAT.OUT_TOL) ,XIC(Batch.STAT.PROMPT) ]OTE(Batch.STAT.BITS.31);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.UNITPROCEDURES.BATCH.STAT.PROMPT$'$N"
				    "[Description]$N"
				    "[Note]TODO : Add the logic that sets batch stat prompt$N"
				    "";
				N: AFI()OTE(Batch.STAT.PROMPT);
		END_ROUTINE

		ROUTINE _120_PermissiveFaultAndMessaging 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [XIC(Batch.STATE.RUNNING) ,XIC(Batch.STATE.RESTARTING) ]EQU(Batch.MSG.FAULT,0)XIC(OtherBatch.STATE.ABORTING)MOV(201,Batch.MSG.FAULT);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(1,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,XIC(Batch.STATE.HELD) MessageToggle(MessageToggle,1,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(2,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,XIO(Batch.STATE.HELD) XIC(Batch.STAT.PHASE_HELD) MessageToggle(MessageToggle,2,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(3,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,XIC(Batch.STAT.OUT_TOL) MessageToggle(MessageToggle,3,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "$N"
				    "";
				N: [EQU(21,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,[XIC(MinorsHopper.STAT.DEVICES_IN_AUTO) EQU(MinorsHopper.INDEX,Batch.ARRAY_INDEX) ,XIC(Mixer.STAT.DEVICES_IN_AUTO) EQU(Mixer.INDEX,Batch.ARRAY_INDEX) ] MessageToggle(MessageToggle,21,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "$N"
				    "";
				N: [EQU(25,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,[EQU(MinorsHopper.STEP_NO,5) EQU(MinorsHopper.GO_ACTIVE,0) EQU(MinorsHopper.INDEX,Batch.ARRAY_INDEX) ,EQU(Mixer.STEP_NO,5) EQU(Mixer.GO_ACTIVE,0) EQU(Mixer.INDEX,Batch.ARRAY_INDEX) ] MessageToggle(MessageToggle,25,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(8,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,XIO(Batch.STATE.IDLE) XIO(Batch.STATE.COMPLETE) EQU(Batch.RECIPE.BATCH.NUMBER,Batch.RECIPE.BATCH.REQUIRED) MessageToggle(MessageToggle,8,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(31,Batch.MSG.MSG) MOV(0,Batch.MSG.MSG) ,EQU(Batch.MSG.FAULT,31) MessageToggle(MessageToggle,31,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(Batch.MSG.MSG,101) MOV(0,Batch.MSG.MSG) ,XIC(Batch.STATE.HELD) EQU(Batch.RECIPE.BATCH.NUMBER,1) EQU(Batch.STEP_REM,3) MessageToggle(MessageToggle,101,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(Batch.MSG.MSG,102) MOV(0,Batch.MSG.MSG) ,XIC(Batch.STATE.IDLE) XIC(OtherBatch.STATE.IDLE) XIO(Batch.STAT.IS_MIX_BATCH) MessageToggle(MessageToggle,102,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: MOV(0,C)LIM(1,Batch.CAMPAIGN_INDEX,cSETUP.NO_CAMPAIGN)MOV(Batch.CAMPAIGN_INDEX,C);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(Batch.MSG.MSG,103) MOV(0,Batch.MSG.MSG) ,XIC(Schedule.CAMPAIGN[C].STATE.HELD) MessageToggle(MessageToggle,103,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(Batch.MSG.MSG,104) MOV(0,Batch.MSG.MSG) ,XIC(Batch.STATE.ABORTED) MessageToggle(MessageToggle,104,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.PERMISSIVEFAULTANDMESSAGING.PHASE.BATCH.MSG$'$N"
				    "[Description]$N"
				    "[Note]TODO : Add the batch phase messages$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [EQU(Batch.MSG.MSG,Batch.MSG.FAULT) MOV(0,Batch.MSG.MSG) ,XIC(Batch.STAT.FAULTED) MessageToggle(MessageToggle,Batch.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.PERMISSIVEFAULTANDMESSAGING.PHASE.PERMISSIVE.MSG$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.PHASE.MATERIAL.TANK.SYSTEM.TO.MIXER$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_ADDCITYWATER$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_AddCityWater.MSG.PERM) ,GRT(ph_AddCityWater.STEP_INDEX,3000) ONS(ph_AddCityWater_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddCityWater.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddCityWater.STATE.RUNNING) EQU(ph_AddCityWater.STEP_INDEX,3000) XIO(ph_AddCityWater.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_AddCityWater.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.PHASE.MATERIAL.TANK.PUMP.TO.MIXER$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_ADDSHORTENING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_AddShortening.MSG.PERM) ,GRT(ph_AddShortening.STEP_INDEX,3000) ONS(ph_AddShortening_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddShortening.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddShortening.STATE.RUNNING) EQU(ph_AddShortening.STEP_INDEX,3000) XIO(ph_AddShortening.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_AddShortening.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MIXER.DISCHARGE:01.01.01$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_DISCHARGE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_Transfer.MSG.PERM) ,GRT(ph_Transfer.STEP_INDEX,3000) ONS(ph_Transfer_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_Transfer.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_Transfer.STATE.RUNNING) EQU(ph_Transfer.STEP_INDEX,3000) XIO(ph_Transfer.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_Transfer.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MIXER.HAND.ADD:01.01.01$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_HANDADD$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_HandAdd.MSG.PERM) ,GRT(ph_HandAdd.STEP_INDEX,3000) ONS(ph_HandAdd_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_HandAdd.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_HandAdd.STATE.RUNNING) EQU(ph_HandAdd.STEP_INDEX,3000) XIO(ph_HandAdd.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_HandAdd.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_HIGHSPEED$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_RunHighSheer.MSG.PERM) ,GRT(ph_RunHighSheer.STEP_INDEX,3000) ONS(ph_RunHighSheer_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_RunHighSheer.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_RunHighSheer.STATE.RUNNING) EQU(ph_RunHighSheer.STEP_INDEX,3000) XIO(ph_RunHighSheer.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_RunHighSheer.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_LOWSPEED$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_RunSweep.MSG.PERM) ,GRT(ph_RunSweep.STEP_INDEX,3000) ONS(ph_RunSweep_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_RunSweep.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_RunSweep.STATE.RUNNING) EQU(ph_RunSweep.STEP_INDEX,3000) XIO(ph_RunSweep.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_RunSweep.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.HOPPER.DUMP:01.01.01$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_SUGARHOPPERDUMP$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_SugarHopperDump.MSG.PERM) ,GRT(ph_SugarHopperDump.STEP_INDEX,3000) ONS(ph_SugarHopperDump_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_SugarHopperDump.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_SugarHopperDump.STATE.RUNNING) EQU(ph_SugarHopperDump.STEP_INDEX,3000) XIO(ph_SugarHopperDump.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_SugarHopperDump.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MIXER.TIME.DELAY:01.01.01$'$N"
				    "Function=$'PERMISSIVE.PHASE.MSG.MIXER09_TIMEDELAY$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_TimeDelay.MSG.PERM) ,GRT(ph_TimeDelay.STEP_INDEX,3000) ONS(ph_TimeDelay_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_TimeDelay.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_TimeDelay.STATE.RUNNING) EQU(ph_TimeDelay.STEP_INDEX,3000) XIO(ph_TimeDelay.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_TimeDelay.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_ConfirmStart.MSG.PERM) ,GRT(ph_ConfirmStart.STEP_INDEX,3000) ONS(ph_ConfirmStart_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_ConfirmStart.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_ConfirmStart.STATE.RUNNING) EQU(ph_ConfirmStart.STEP_INDEX,3000) XIO(ph_ConfirmStart.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_ConfirmStart.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_Heat.MSG.PERM) ,GRT(ph_Heat.STEP_INDEX,3000) ONS(ph_Heat_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_Heat.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_Heat.STATE.RUNNING) EQU(ph_Heat.STEP_INDEX,3000) XIO(ph_Heat.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_Heat.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_SugarHopperReadyToDump.MSG.PERM) ,GRT(ph_SugarHopperReadyToDump.STEP_INDEX,3000) ONS(ph_SugarHopperReadyToDump_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_SugarHopperReadyToDump.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_SugarHopperReadyToDump.STATE.RUNNING) EQU(ph_SugarHopperReadyToDump.STEP_INDEX,3000) XIO(ph_SugarHopperReadyToDump.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_SugarHopperReadyToDump.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_AddPowderedSugar.MSG.PERM) ,GRT(ph_AddPowderedSugar.STEP_INDEX,3000) ONS(ph_AddPowderedSugar_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddPowderedSugar.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddPowderedSugar.STATE.RUNNING) EQU(ph_AddPowderedSugar.STEP_INDEX,3000) XIO(ph_AddPowderedSugar.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_AddPowderedSugar.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_AddSugar.MSG.PERM) ,GRT(ph_AddSugar.STEP_INDEX,3000) ONS(ph_AddSugar_ClearMSG) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddSugar.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddSugar.STATE.RUNNING) EQU(ph_AddSugar.STEP_INDEX,3000) XIO(ph_AddSugar.STAT.PERMISSIVE) MessageToggle(MessageToggle,ph_AddSugar.MSG.PERM,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.PERMISSIVEFAULTANDMESSAGING.PHASE.FAULT.MSG$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.PHASE.MATERIAL.TANK.SYSTEM.TO.MIXER$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_ADDCITYWATER$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_AddCityWater.MSG.FAULT) ,XIC(ph_AddCityWater.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddCityWater.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddCityWater.STAT.FAULTED) MessageToggle(MessageToggle,ph_AddCityWater.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.PHASE.MATERIAL.TANK.PUMP.TO.MIXER$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_ADDSHORTENING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_AddShortening.MSG.FAULT) ,XIC(ph_AddShortening.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddShortening.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddShortening.STAT.FAULTED) MessageToggle(MessageToggle,ph_AddShortening.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MIXER.DISCHARGE:01.01.01$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_DISCHARGE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_Transfer.MSG.FAULT) ,XIC(ph_Transfer.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_Transfer.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_Transfer.STAT.FAULTED) MessageToggle(MessageToggle,ph_Transfer.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MIXER.HAND.ADD:01.01.01$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_HANDADD$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_HandAdd.MSG.FAULT) ,XIC(ph_HandAdd.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_HandAdd.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_HandAdd.STAT.FAULTED) MessageToggle(MessageToggle,ph_HandAdd.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_HIGHSPEED$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_RunHighSheer.MSG.FAULT) ,XIC(ph_RunHighSheer.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_RunHighSheer.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_RunHighSheer.STAT.FAULTED) MessageToggle(MessageToggle,ph_RunHighSheer.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_LOWSPEED$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_RunSweep.MSG.FAULT) ,XIC(ph_RunSweep.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_RunSweep.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_RunSweep.STAT.FAULTED) MessageToggle(MessageToggle,ph_RunSweep.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.HOPPER.DUMP:01.01.01$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_SUGARHOPPERDUMP$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_SugarHopperDump.MSG.FAULT) ,XIC(ph_SugarHopperDump.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_SugarHopperDump.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_SugarHopperDump.STAT.FAULTED) MessageToggle(MessageToggle,ph_SugarHopperDump.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'PHASE.MIXER.TIME.DELAY:01.01.01$'$N"
				    "Function=$'FAULT.PHASE.MSG.MIXER09_TIMEDELAY$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [[EQU(Batch.MSG.MSG,ph_TimeDelay.MSG.FAULT) ,XIC(ph_TimeDelay.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_TimeDelay.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_TimeDelay.STAT.FAULTED) MessageToggle(MessageToggle,ph_TimeDelay.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_ConfirmStart.MSG.FAULT) ,XIC(ph_ConfirmStart.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_ConfirmStart.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_ConfirmStart.STAT.FAULTED) MessageToggle(MessageToggle,ph_ConfirmStart.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_Heat.MSG.FAULT) ,XIC(ph_Heat.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_Heat.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_Heat.STAT.FAULTED) MessageToggle(MessageToggle,ph_Heat.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_SugarHopperReadyToDump.MSG.FAULT) ,XIC(ph_SugarHopperReadyToDump.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_SugarHopperReadyToDump.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_SugarHopperReadyToDump.STAT.FAULTED) MessageToggle(MessageToggle,ph_SugarHopperReadyToDump.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_AddPowderedSugar.MSG.FAULT) ,XIC(ph_AddPowderedSugar.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddPowderedSugar.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddPowderedSugar.STAT.FAULTED) MessageToggle(MessageToggle,ph_AddPowderedSugar.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				N: [[EQU(Batch.MSG.MSG,ph_AddSugar.MSG.FAULT) ,XIC(ph_AddSugar.CMD.CLEAR_FAILURE) ] MOV(0,Batch.MSG.MSG) ,EQU(ph_AddSugar.LINE_INDEX,Batch.ARRAY_INDEX) XIC(ph_AddSugar.STAT.FAULTED) MessageToggle(MessageToggle,ph_AddSugar.MSG.FAULT,Batch.MSG.MSG,Batch.MSG.Toggle.1) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: MOV(0,Batch.IPAR[10])CMP(Batch.MSG.MSG>100000*cSETUP.PLC_ID)CMP(Batch.MSG.MSG<=200000*cSETUP.PLC_ID)DIV(Batch.MSG.MSG,100,Batch.IPAR[10]);
		END_ROUTINE

		ROUTINE _200_Actuals 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.MATERIAL.ADD.SETPOINTS$'$N"
				    "[Description] ADD.SETPOINTS:Material setpoints to setpoint 1.$N"
				    "[Note]TODO : Add the setpoints from all material additions phases batch setpoint 1.$N"
				    "";
				N: MOV(0,Batch.SPT[1]);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.MATERIAL.ADD.ACTUALS$'$N"
				    "[Description] ADD.ACTUALS:Material actuals to setpoint 1.$N"
				    "[Note]TODO : Add the actuals from all material additions phases batch setpoint 1.$N"
				    "";
				N: XIO(Batch.STATE.IDLE)MOV(0,Batch.ACTUAL[1]);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.BATCH.ACTUAL.02$'$N"
				    "[Description]$N"
				    "[Note]TODO : Check batch actual is correct.$N"
				    "";
				N: EQU(Mixer.INDEX,Batch.ARRAY_INDEX)DIV(Mixer.TMR[1].ACC,60000,Batch.ACTUAL[2]);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'MIXERBATCH.BATCH.SETPOINT.ACTUAL.03.04$'$N"
				    "[Description]$N"
				    "[Note]TODO : Check batch actual is correct.$N"
				    "";
				N: EQU(Mixer.INDEX,Batch.ARRAY_INDEX)[MOV(Batch.SPT[4],Mixer.SPT[4]) MOV(Batch.SPT[5],Mixer.SPT[5]) ,MOV(Mixer.ACTUAL[4],Batch.ACTUAL[4]) MOV(Mixer.ACTUAL[5],Batch.ACTUAL[5]) ];
		END_ROUTINE

		ROUTINE _200_ProcessVariables 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]TODO : Setup the batch PV values.$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Batch.STATE.RUNNING)XIC(Batch.STEP.RECORD)FLL(0,Batch.PV[1],9);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
		END_ROUTINE

		ROUTINE _300_BatchView 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
		END_ROUTINE

		ROUTINE _300_Recipe 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: MOV(0,V);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: LBL(ForEachUnitProcedure)[ADD(1,V,V) MOV(0,W) ,EQU(Batch.RECIPE.STEP[V].UNIT_INDEX,0) JMP(ExitForEachUnitProcedure) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: LBL(ForEachUnitProcedureStep)[ADD(1,W,W) ,EQU(Batch.RECIPE.STEP[V].STEP[W].PHASE_INDEX,0) JMP(NextUnitProcedure) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: EQU(Batch.RECIPE.HEADER.ID,OtherBatch.RECIPE.HEADER.ID)EQU(Batch.CAMPAIGN_INDEX,OtherBatch.CAMPAIGN_INDEX)[XIC(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade1) MOV(Batch.RECIPE.STEP[V].STEP[W].ACTUAL[3],OtherBatch.RECIPE.STEP[V].STEP[W].ACTUAL[3]) OTU(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade1) ,XIC(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade2) MOV(Batch.RECIPE.STEP[V].STEP[W].ACTUAL[7],OtherBatch.RECIPE.STEP[V].STEP[W].ACTUAL[7]) OTU(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade2) ,XIC(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade3) MOV(Batch.RECIPE.STEP[V].STEP[W].ACTUAL[11],OtherBatch.RECIPE.STEP[V].STEP[W].ACTUAL[11]) OTU(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade3) ,XIC(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade4) MOV(Batch.RECIPE.STEP[V].STEP[W].ACTUAL[15],OtherBatch.RECIPE.STEP[V].STEP[W].ACTUAL[15]) OTU(Batch.RECIPE.STEP[V].STEP[W].STAT.AdjustmentWasMade4) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.1) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[1],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[1]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.1) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.2) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[2],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[2]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.2) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.3) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[3],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[3]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.3) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.4) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[4],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[4]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.4) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.5) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[5],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[5]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.5) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.6) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[6],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[6]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.6) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.7) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[7],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[7]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.7) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.8) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[8],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[8]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.8) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.9) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[9],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[9]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.9) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.10) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[10],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[10]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.10) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.11) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[11],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[11]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.11) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.12) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[12],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[12]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.12) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.13) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[13],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[13]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.13) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.14) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[14],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[14]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.14) ,XIC(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.15) MOV(Batch.RECIPE.STEP[V].STEP[W].SPT[15],OtherBatch.RECIPE.STEP[V].STEP[W].SPT[15]) OTU(Batch.RECIPE.STEP[V].STEP[W].SPT_ADJUSTED.15) ];
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: LBL(NextUnitProcedureStep)LES(W,MaxUnitProcedureSteps)JMP(ForEachUnitProcedureStep);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: LBL(NextUnitProcedure)LES(V,MaxUnitProcedures)JMP(ForEachUnitProcedure);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: LBL(ExitForEachUnitProcedure)NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: MOV(cPHZ[6].SPT[0],cPHZ[6].SPT[0])MOV(Batch.RECIPE.STEP[5].STEP[4].ACTUAL[7],Batch.RECIPE.STEP[5].STEP[4].ACTUAL[7])MOV(OtherBatch.RECIPE.STEP[5].STEP[4].ACTUAL[7],OtherBatch.RECIPE.STEP[5].STEP[4].ACTUAL[7]);
		END_ROUTINE

		ROUTINE _FirstScan 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: CPT(Batch.ID,1000*cSETUP.PLC_ID+Batch.ARRAY_INDEX);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
		END_ROUTINE

		ROUTINE _Main 
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: NOP();
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_300_BatchView,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_110_UnitProcedures,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_300_Recipe,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_050_Running,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_120_PermissiveFaultAndMessaging,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_200_ProcessVariables,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: JSR(_200_Actuals,0);
				RC: "Template=$'EQUIPMENT.MODULE.MIXER.01.01$'$N"
				    "Function=$'$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(S:FS)JSR(_FirstScan,0);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM
