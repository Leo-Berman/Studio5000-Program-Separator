	PROGRAM Mixer02_HighSpeed (Description := "$NProgram=$'PH$'$NClass=$'MIXER.HIGH.SPEED:01.01.01$'$N",
	                           MAIN := "_000_Main",
	                           MODE := 0,
	                           DisableFlag := 0,
	                           UseAsFolder := 0)
		TAG
			ActualMinutesRemaining OF Phase.USER.RPAR[5] (RADIX := Float);
			ActualSecondsRemaining OF Phase.USER.RPAR[6] (RADIX := Float);
			ActualTemperature OF Phase.ACTUAL[5] (RADIX := Float);
			ActualTemperatureAdjustment OF Phase.ACTUAL[7] (RADIX := Float);
			ActualTemperatureError OF Phase.ACTUAL[6] (RADIX := Float);
			ActualTime OF Phase.ACTUAL[1] (RADIX := Float);
			ActualTimeAdjustment OF Phase.ACTUAL[3] (RADIX := Float);
			ActualTimePercent OF Phase.USER.RPAR[7] (RADIX := Float);
			ActualTimeRemaining OF Phase.USER.RPAR[4] (RADIX := Float);
			AOI : CB_PHASE_AOI  := [[3],[3,10450000],[3,[0,1015]],[3],[1,0.00000000e+000],[3],[3,0.00000000e+000,0.00000000e+000],[3],[3,1045,104500,104499
					],[[3],[1],[1],[3],[1],[1],[1],[1]],[3,16,15,15],[1,[[1,0,0],[[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],0,0]],0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,[1,0.00000000e+000,0.00000000e+000],0.00000000e+000
					],[3,0.00000000e+000,0.00000000e+000]];
			AutoRunMixerMotor OF Phase.CM.AutoRun[10] (RADIX := Decimal);
			AutoRunMixerMotorOffDelay OF Phase.CM.AutoRun[12] (RADIX := Decimal);
			AutoRunTemperatureControl OF Phase.CM.AutoRun[11] (RADIX := Decimal);
			Discharge OF cPHZ[45] ;
			EStop OF cDI[5] ;
			MixerClosed OF cDI[341] ;
			MixerCommOk OF cDI[342] ;
			MixerInterlocked OF cDI[339] ;
			MixerMotor OF cDO[485] ;
			MixerMotorSpeed OF cAO[106] ;
			MixerOffDelay OF Phase.TMR[0] ;
			MixerRemote OF cDI[338] ;
			MixerTemperature OF cAI[206] ;
			MixTimer OF Phase.STEP_TMR.ACTIVE ;
			MixTimerIntervals : TimeElapsedRemainingAOI  := [[0,810000,810008],[[8.10007996e+002,1.35001335e+001,2.25002229e-001,9.37509257e-003,810008],[-8.00000038e-003
					,-1.33333335e-004,-2.22222229e-006,9.37509257e-003,-8],[3.00000000e+001,1.30000000e+001,0.00000000e+000
					,0.00000000e+000,8],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,-8],810000
					,810008]];
			OIT : CB_OIT  := [[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
					],0,0,[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],0,0,0,262625220,0,0,[0,0,0,0,0,0,0,0,0,0],[0,0,0,0],0,[0,[0,0,0]],[0,[0,0,0]],0,0,0];
			Phase OF cPHZ[45] (Usage := Public);
			PhaseClass OF cPHZ_CLASS[9] (Usage := Public);
			ph_Discharge OF cPHZ[41] ;
			ProgressTimeIntervals : TimeElapsedRemainingAOI  := [[1,0,0],[[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],0,0]];
			TargetSpeed OF Phase.USER.SETTINGS[0] (RADIX := Float);
			TargetSpeedIntermediate OF Phase.USER.SETTINGS[2] (RADIX := Float);
			TargetSpeedSetpoint OF Phase.USER.SETTINGS[1] (RADIX := Float);
			TargetTemperature OF Phase.SPT[4] (RADIX := Float);
			TargetTemperatureAdjustmentLimit OF Phase.SPT[7] (RADIX := Float);
			TargetTemperatureSetpoint OF Phase.SPT[5] (RADIX := Float);
			TargetTemperatureTolerance OF Phase.SPT[6] (RADIX := Float);
			TargetTime OF Phase.SPT[0] (RADIX := Float);
			TargetTimeAdjustmentLimit OF Phase.SPT[3] (RADIX := Float);
			TargetTimeSetpoint OF Phase.SPT[1] (RADIX := Float);
			TemperatureToleranceDelay OF Phase.TMR[1] ;
			Unit OF cUNIT[50] ;
		END_TAG

		ROUTINE _000_FirstScan 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.TYPE$'$N"
				    "Function=$'TYPE$'$N"
				    "";
				N: MOV(9,PhaseClass.TYPE);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.INDEX.SETTING$'$N"
				    "Function=$'INDEX.SETTING$'$N"
				    "";
				N: MOV(Unit.ARRAY_INDEX,Phase.INDEX)MOV(PhaseClass.TYPE,Phase.TYPE)MOV(PhaseClass.ID,Phase.CLASS)COP(PhaseClass.NAME,Phase.CLASS_NAME,1)COP(PhaseClass.TYPE_NAME,Phase.TYPE_NAME,1);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.DISPLAY.MASK.SETTING$'$N"
				    "Function=$'DISPLAY.MASK.SETTING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.CLASS.PARAMETERS$'$N"
				    "Function=$'CLASS.PARAMETERS$'$N"
				    "";
				N: PhaseClassParameter(AOI.PhaseClassParameter,PhaseClass,Phase.USER,Phase.DISPLAY_MASK,Phase.TYPE_MASK);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.SECTION.FIRSTSCAN.SETTING$'$N"
				    "Function=$'STANDARD.PHASE.SECTION.FIRSTSCAN.SETTING$'$N"
				    "";
				N: PhaseClassParameter(AOI.PhaseClassParameter,PhaseClass,Phase.USER,Phase.DISPLAY_MASK,Phase.TYPE_MASK);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'SETTING.MIXER.DEFAULT.SPEED.SETTING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: LEQ(TargetSpeedSetpoint,0)MOV(70,TargetSpeedSetpoint);
		END_ROUTINE

		ROUTINE _000_Main 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.FIRSTSCAN$'$N"
				    "Function=$'EXECUTE.FIRSTSCAN$'$N"
				    "";
				N: XIC(S:FS)JSR(_000_FirstScan,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.WATCHWINDOW.STATE$'$N"
				    "Function=$'WATCHWINDOW.PHASE.STATE$'$N"
				    "";
				N: XIC(Phase.STATE.IDLE)XIC(Phase.STATE.RUNNING)XIC(Phase.STATE.HELD)XIC(Phase.STATE.COMPLETE)XIC(Phase.STATE.ABORTED)XIC(Phase.STATE.STOPPED)NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.WATCHWINDOW.STATE.TRANSITION$'$N"
				    "Function=$'WATCHWINDOW.PHASE.STATE.TRANSITION$'$N"
				    "";
				N: XIC(Phase.STATE.HOLDING)XIC(Phase.STATE.RESTARTING)XIC(Phase.STATE.ABORTING)XIC(Phase.STATE.STOPPING)NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.WATCHWINDOW.CONTROL$'$N"
				    "Function=$'WATCHWINDOW.PHASE.CONTROL$'$N"
				    "";
				N: [XIC(Phase.CMD.START) XIC(Phase.CMD.HOLD) XIC(Phase.CMD.RESTART) XIC(Phase.CMD.STOP) XIC(Phase.CMD.ABORT) XIC(Phase.CMD.RESET) ,MOV(Phase.STATE_NO,Phase.STATE_NO) MOV(Phase.STEP_INDEX,Phase.STEP_INDEX) MOV(Phase.MSG.FAULT,Phase.MSG.FAULT) ,MOV(Phase.SPT[1],Phase.SPT[1]) MOV(Phase.ACTUAL[1],Phase.ACTUAL[1]) ]NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.PERMISSIVES.FAULTS.MESSAGING$'$N"
				    "Function=$'EXECUTE.PERMISSIVES.FAULTS.MESSAGING$'$N"
				    "";
				N: JSR(_120_PermissiveFaultAndMessaging,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.AOI$'$N"
				    "Function=$'AOI$'$N"
				    "";
				N: PhaseMode(AOI.Mode,Phase,cPHZ[0].MSG)PhaseCommon(AOI.Common,Phase)PhaseStepIndex(AOI.StepIndex,Phase)PhaseStateTransition(AOI.StateTransition,Phase.CMD,Phase.STAT,Phase.STATE,Phase.STATE_NO);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.STEPCONTROL$'$N"
				    "Function=$'EXECUTE.STEPCONTROL$'$N"
				    "";
				N: JSR(_050_StepControl,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.CONTROLMODULE$'$N"
				    "Function=$'EXECUTE.CONTROLMODULE$'$N"
				    "";
				N: JSR(_110_ControlModule,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.ALARMING$'$N"
				    "Function=$'EXECUTE.ALARMING$'$N"
				    "";
				N: JSR(_130_Alarming,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEP.MAPPING$'$N"
				    "Function=$'STEP.MAPPING$'$N"
				    "";
				N: PhaseStepMapping(AOI.StepMapping,Phase);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.BYPASS$'$N"
				    "Function=$'BYPASS$'$N"
				    "";
				N: PhaseBypass(AOI.Bypass,Phase);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MAIN.EXTENDED.FUNCTION$'$N"
				    "Function=$'EXTENDED.FUNCTION$'$N"
				    "";
				N: NOP();
		END_ROUTINE

		ROUTINE _050_StepControl 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.SIMULATE.RETURN$'$N"
				    "Function=$'SIMULATE.RETURN$'$N"
				    "";
				N: XIC(cSETUP.SIMULATION.Enabled)XIC(cSETUP.SIMULATION.PHASE)RET();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.IDLE$'$N"
				    "Function=$'STEP.CONTROL.IDE$'$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,1)MOV(2000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.INITIAL.RECORDSTEP$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,2000)[GEQ(Phase.STEP_TMR.CurrentStepIndex.ACC,Phase.STEP_TMR.RECORD.PRE) MOV(3000,Phase.STEP_INDEX_GOTO) ,FLL(0,Phase.ACTUAL[0],6) RES(MixTimer) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.PERMISSIVE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,3000)XIC(Phase.STAT.PERMISSIVE)MOV(4000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.INITIALIZE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,4000)GEQ(Phase.STEP_TMR.CurrentStepIndex.ACC,Phase.STEP_TMR.INITIALIZE.PRE)MOV(5000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.TARGET.CALCULATE.ADJUSTED$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: PhaseTargetAdjustLimit(AOI.TargetAdjustLimit,TargetTimeAdjustmentLimit,ActualTimeAdjustment,TargetTime,TargetTimeSetpoint,Phase.STAT.MAN)PhaseTargetAdjustLimit(AOI.TargetAdjustLimit2,TargetTemperatureAdjustmentLimit,ActualTemperatureAdjustment,TargetTemperature,TargetTemperatureSetpoint,Phase.STAT.MAN);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.TARGET.CHECK$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)[GEQ(TargetTime,0) MUL(TargetTime,60000,MixTimer.PRE) ,XIC(MixerMotor.STAT.ON_OPEN) RTO(MixTimer,?,?) ,XIC(MixTimer.DN) MOV(6000,Phase.STEP_INDEX_GOTO) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.TEMPRETURE.ACTUAL$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)MOV(MixerTemperature.SCALED,ActualTemperature)SUB(ActualTemperature,TargetTemperature,ActualTemperatureError);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.CALCULATE.ACTUAL$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)MOV(TargetSpeedSetpoint,TargetSpeed)TimeElapsedRemaining(MixTimerIntervals.AOI,MixTimer.PRE,MixTimer.ACC,MixTimerIntervals.ACC)[MOV(MixTimerIntervals.ACC.Elapsed.Minutes,Phase.ACTUAL[0]) MOV(MixTimerIntervals.ACC.Elapsed.Minutes,ActualTime) ,MOV(MixTimerIntervals.ACC.Remaining.Minutes,ActualTimeRemaining) ,MOV(MixTimerIntervals.ACC.RemainingClock.Minutes,ActualMinutesRemaining) ,MOV(MixTimerIntervals.ACC.RemainingClock.Seconds,ActualSecondsRemaining) ,GRT(TargetTime,0) CPT(ActualTimePercent,100*ActualTime/TargetTime) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.FINAL.RECORDSTEP$'$N"
				    "Function=$'STANDARD.PHASE.STEPCTRL.SECTION.FINAL.RECORDSTEP$'$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,6000)MOV(10000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,10000)OTE(Phase.STAT.RUNNING_COMPLETE);
				RC: "HOLDING$N"
				    "Phase enters holdinging state as a result of CMD.HOLD (see PhaseStateTransition)$N"
				    "Logic in this routine should set all EM$'s and CM$'s to a safe state.$N"
				    "Then set Holding Complete bit to end the holding logic and proceed to HELD.$N"
				    " $N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.INITIAL.RECORDSTEP$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.HOLDING)LIM(1,Phase.STEP_INDEX,2999)[GEQ(Phase.STEP_TMR.CurrentStepIndex.ACC,Phase.STEP_TMR.RECORD.PRE) MOV(3000,Phase.STEP_INDEX_GOTO) ,FLL(0,Phase.ACTUAL[0],6) RES(MixTimer) ];
				RC: "HOLDING COMPLETE$N"
				    "Wait for mixer motor to turn off, then wait for a brief delay and goto HELD.$N"
				    " ";
				N: XIC(Phase.STATE.HOLDING)[TON(Phase.STEP_TMR.HOLDING,?,?) ,XIC(MixerMotor.STAT.OFF_CLOSED) XIC(Phase.STEP_TMR.HOLDING.DN) OTE(Phase.STAT.HOLDING_COMPLETE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.RESTARTING$'$N"
				    "Function=$'STEP.CONTROL.SECTION.RESTARTING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.RESTARTING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Restarting)[LIM(3000,Phase.STEP_INDEX,5000) MOV(3000,Phase.STEP_INDEX_GOTO) ,LIM(6000,Phase.STEP_INDEX,9999) MOV(10000,Phase.STEP_INDEX_GOTO) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.MOTOR.RESET.FAULT$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RESTARTING)OTL(MixerMotor.CMD.RESET);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.RESTARTING.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RESTARTING)[XIC(Phase.STEP_TMR.RESTARTING.DN) OTE(Phase.STAT.RESTARTING_COMPLETE) ,TON(Phase.STEP_TMR.RESTARTING,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.STOPPING$'$N"
				    "Function=$'STEP.CONTROL.SECTION.STOPPING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.STOPPING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Stopping)MOV(10000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.STOPPING.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.STOPPING)EQU(Phase.STEP_INDEX,10000)OTE(Phase.STAT.STOPPING_COMPLETE);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.ABORTING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Aborting)MOV(10000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.ABORTING.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.ABORTING)EQU(Phase.STEP_INDEX,10000)OTE(Phase.STAT.ABORTING_COMPLETE);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.RESET$'$N"
				    "Function=$'STEP.CONTROL.SECTION.RESET$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.STEPCONTROL.SECTION.RESET$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Idle)NOP();
		END_ROUTINE

		ROUTINE _110_ControlModule 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.SIMULATE.RETURN$'$N"
				    "Function=$'SIMULATE.RETURN$'$N"
				    "";
				N: XIC(cSETUP.SIMULATION.Enabled)XIC(cSETUP.SIMULATION.PHASE)RET();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.CONTROLMODULE.AUTORUN.MIXERMOTOR$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)OTE(AutoRunMixerMotor);
				RC: "In auto mode, we keep the mixer running for OFF delay so that it stays running iinto the Discharge$N"
				    "";
				N: [XIC(Phase.STAT.AUTO) XIC(Phase.STATE.RUNNING) EQU(Phase.STEP_INDEX,5000) TOF(MixerOffDelay,?,?) ,XIC(ph_Discharge.STAT.AUTO) XIC(ph_Discharge.STATE.RUNNING) GEQ(ph_Discharge.STEP_INDEX,3000) MOV(MixerOffDelay.PRE,MixerOffDelay.ACC) ,XIC(MixerOffDelay.DN) OTE(AutoRunMixerMotorOffDelay) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.HIGH$'$N"
				    "Function=$'RUNG.CONTROLMODULE.AUTORUN.TEMPERATURE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)XIO(Unit.STAT.CLEANING)OTE(AutoRunTemperatureControl);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.CONTROLMODULE.RESET.CM$'$N"
				    "Function=$'CONTROLMODULE.RESET.CM$'$N"
				    "";
				N: [XIC(Phase.CMD.START) ,XIC(Phase.CMD.RESTART) ]OTL(MixerMotor.CMD.RESET);
		END_ROUTINE

		ROUTINE _120_PermissiveFaultAndMessaging 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "$N"
				    "";
				N: [MOV(0,Phase.MSG.PERM) ,XIO(MixerRemote.STAT.ON) MOV(1,Phase.MSG.PERM) ,XIO(MixerClosed.STAT.ON) MOV(2,Phase.MSG.PERM) ,XIC(MixerInterlocked.STAT.ON) MOV(3,Phase.MSG.PERM) ,XIO(MixerCommOk.STAT.ON) MOV(4,Phase.MSG.PERM) ,XIO(MixerMotor.STAT.AUTO) MOV(5,Phase.MSG.PERM) ,EQU(Phase.MSG.PERM,0) OTE(Phase.STAT.PERMISSIVE) ];
				RC: "$N"
				    "";
				N: [XIC(Phase.STATE.RUNNING) ,XIC(Phase.STATE.RESTARTING) ]EQU(Phase.MSG.FAULT,0)[XIC(EStop.STAT.FAULT) MOV(21,Phase.MSG.FAULT) ,XIO(MixerRemote.STAT.ON) MOV(22,Phase.MSG.FAULT) ,XIO(MixerClosed.STAT.ON) MOV(23,Phase.MSG.FAULT) ,XIC(MixerInterlocked.STAT.ON) MOV(24,Phase.MSG.FAULT) ,XIO(MixerCommOk.STAT.ON) MOV(25,Phase.MSG.FAULT) ,XIC(MixerMotor.STAT.FAULT) MOV(26,Phase.MSG.FAULT) ,XIC(MixerMotorSpeed.STAT.FAULT) MOV(27,Phase.MSG.FAULT) ,XIC(cSETUP.SIMULATION.Enabled) XIC(cSETUP.SIMULATION.PHASE) MOV(0,Phase.MSG.FAULT) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MESSAGE$'$N"
				    "Function=$'STATUS.MESSAGE$'$N"
				    "";
				N: [MOV(0,Phase.MSG.MSG) ,XIC(Phase.STAT.BYPASS) XIO(Phase.STEP.RECORD) MOV(61,Phase.MSG.MSG) ,XIC(Phase.STAT.BYPASS) XIC(Phase.STEP.RECORD) MOV(62,Phase.MSG.MSG) ,XIC(Phase.STATE.HELD) XIO(Phase.STAT.FAULTED) MOV(63,Phase.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MESSAGE.UNIQUE$'$N"
				    "Function=$'STATUS.MESSAGE.UNIQUE$'$N"
				    "";
				N: MakeMessageNumberGloballyUnique(AOI.Message,Phase.ID,Phase.MSG);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MESSAGE.STATUS$'$N"
				    "Function=$'MESSAGE$'$N"
				    "";
				N: [LIM(2000,Phase.STEP_INDEX,3000) NEQ(Phase.MSG.PERM,0) MOV(Phase.MSG.PERM,Phase.MSG.MSG) ,GEQ(Phase.STEP_INDEX,3000) NEQ(Phase.MSG.FAULT,0) MOV(Phase.MSG.FAULT,Phase.MSG.MSG) ,EQU(Phase.MSG.FAULT,0) EQU(Phase.MSG.PERM,0) ONS(Phase.MSG.OS.1) CLR(Phase.MSG.MSG) ];
		END_ROUTINE

		ROUTINE _130_Alarming 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.ALARM.FAULT$'$N"
				    "Function=$'ALARM.FAULT$'$N"
				    "";
				N: [XIC(Phase.STAT.FAULTED) OTE(Phase.ALARM[0].ACTIVE) ,AlarmControl(AOI.AlarmControl[0],Phase.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
				N: [GRT(TargetTemperatureTolerance,0) [XIC(Phase.STATE.RUNNING) GEQ(Phase.STEP_INDEX,5000) ,XIO(Discharge.STATE.IDLE) ] CMP(ABS(ActualTemperatureError)>TargetTemperatureTolerance) [XIC(TemperatureToleranceDelay.DN) OTE(Phase.ALARM[3].ACTIVE) ,TON(TemperatureToleranceDelay,?,?) ] ,LES(Phase.USER.SETTINGS[3],0) MOV(0,Phase.USER.SETTINGS[3]) ,MUL(Phase.USER.SETTINGS[3],1000,TemperatureToleranceDelay.PRE) ,AlarmControl(AOI.AlarmControl[3],Phase.ALARM[3],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM
