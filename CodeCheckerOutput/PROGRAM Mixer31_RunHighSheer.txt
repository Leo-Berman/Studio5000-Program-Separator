	PROGRAM Mixer31_RunHighSheer (Description := "$NProgram=$'PH$'$NClass=$'MIXER.HIGH.SPEED:01.01.01$'$N",
	                              MAIN := "_000_Main",
	                              MODE := 0,
	                              DisableFlag := 0,
	                              UseAsFolder := 0)
		TAG
			ActualMinutesRemaining OF Phase.USER.RPAR[5] (RADIX := Float);
			ActualSecondsRemaining OF Phase.USER.RPAR[6] (RADIX := Float);
			ActualSpeedAdjustment OF Phase.ACTUAL[7] (RADIX := Float);
			ActualTime OF Phase.ACTUAL[1] (RADIX := Float);
			ActualTimeAdjustment OF Phase.ACTUAL[3] (RADIX := Float);
			ActualTimePercent OF Phase.USER.RPAR[7] (RADIX := Float);
			ActualTimeRemaining OF Phase.USER.RPAR[4] (RADIX := Float);
			AOI : CB_PHASE_AOI  := [[3],[3,10900000],[3,[3,1090]],[3],[1,0.00000000e+000],[3],[7,1.00000000e+001,1.50000000e+001],[3],[3,1090,109000,108999
					],[[3],[1],[1],[1],[1],[1],[1],[1]],[3,16,15,15],[1,[[1,0,0],[[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000
					,0.00000000e+000,0],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0],0,0]],0.00000000e+000
					,0.00000000e+000,0.00000000e+000,0.00000000e+000,[1,0.00000000e+000,0.00000000e+000],0.00000000e+000
					],[7,0.00000000e+000,5.00000000e+001]];
			AutoRunMixerMotor OF Phase.CM.AutoRun[10] (RADIX := Decimal);
			EStop OF cDI[5] ;
			Interface OF eInterfaceMixer[31] ;
			MixerCommOk OF cDI[515] ;
			MixerInterlocked OF cDI[512] ;
			MixerMotor OF cDO[776] ;
			MixerMotorSpeed OF cAO[154] ;
			MixerOffDelay OF Phase.TMR[0] ;
			MixerRemote OF cDI[371] ;
			MixTimer OF Phase.STEP_TMR.ACTIVE ;
			MixTimerIntervals : TimeElapsedRemainingAOI  := [[0,900000,900022],[[9.00021973e+002,1.50003662e+001,2.50006109e-001,1.04169212e-002,900022],[-2.19999999e-002
					,-3.66666674e-004,-6.11111091e-006,1.04169212e-002,-22],[0.00000000e+000,1.50000000e+001,0.00000000e+000
					,0.00000000e+000,22],[0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,-22],900000
					,900022]];
			OIT : CB_OIT  := [[0,'$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00$00'
					],0,0,[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0],0,0,0,22774393,0,0,[0,0,0,0,0,0,0,0,0,0],[0,0,0,0],0,[0,[0,0,0]],[0,[0,0,0]],0,0,0];
			Phase OF cPHZ[125] (Usage := Public);
			PhaseClass OF cPHZ_CLASS[9] (Usage := Public);
			TargetSpeed OF Phase.SPT[4] (RADIX := Float);
			TargetSpeedAdjustmentLimit OF Phase.SPT[7] (RADIX := Float);
			TargetSpeedSetpoint OF Phase.SPT[5] (RADIX := Float);
			TargetTime OF Phase.SPT[0] (RADIX := Float);
			TargetTimeAdjustmentLimit OF Phase.SPT[3] (RADIX := Float);
			TargetTimeSetpoint OF Phase.SPT[1] (RADIX := Float);
			Unit OF cUNIT[72] ;
		END_TAG

		ROUTINE _000_FirstScan 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.TYPE$'$N"
				    "Function=$'TYPE$'$N"
				    "";
				N: MOV(9,PhaseClass.TYPE);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.INDEX.SETTING$'$N"
				    "Function=$'INDEX.SETTING$'$N"
				    "";
				N: MOV(Unit.ARRAY_INDEX,Phase.INDEX)MOV(PhaseClass.TYPE,Phase.TYPE)MOV(PhaseClass.ID,Phase.CLASS)COP(PhaseClass.NAME,Phase.CLASS_NAME,1)COP(PhaseClass.TYPE_NAME,Phase.TYPE_NAME,1);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.DISPLAY.MASK.SETTING$'$N"
				    "Function=$'DISPLAY.MASK.SETTING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.CLASS.PARAMETERS$'$N"
				    "Function=$'CLASS.PARAMETERS$'$N"
				    "";
				N: PhaseClassParameter(AOI.PhaseClassParameter,PhaseClass,Phase.USER,Phase.DISPLAY_MASK,Phase.TYPE_MASK);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.SECTION.FIRSTSCAN.SETTING$'$N"
				    "Function=$'STANDARD.PHASE.SECTION.FIRSTSCAN.SETTING$'$N"
				    "";
				N: PhaseClassParameter(AOI.PhaseClassParameter,PhaseClass,Phase.USER,Phase.DISPLAY_MASK,Phase.TYPE_MASK);
		END_ROUTINE

		ROUTINE _000_Main 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.FIRSTSCAN$'$N"
				    "Function=$'EXECUTE.FIRSTSCAN$'$N"
				    "";
				N: XIC(S:FS)JSR(_000_FirstScan,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.WATCHWINDOW.STATE$'$N"
				    "Function=$'WATCHWINDOW.PHASE.STATE$'$N"
				    "";
				N: XIC(Phase.STATE.IDLE)XIC(Phase.STATE.RUNNING)XIC(Phase.STATE.HELD)XIC(Phase.STATE.COMPLETE)XIC(Phase.STATE.ABORTED)XIC(Phase.STATE.STOPPED)NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.WATCHWINDOW.STATE.TRANSITION$'$N"
				    "Function=$'WATCHWINDOW.PHASE.STATE.TRANSITION$'$N"
				    "";
				N: XIC(Phase.STATE.HOLDING)XIC(Phase.STATE.RESTARTING)XIC(Phase.STATE.ABORTING)XIC(Phase.STATE.STOPPING)NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.WATCHWINDOW.CONTROL$'$N"
				    "Function=$'WATCHWINDOW.PHASE.CONTROL$'$N"
				    "";
				N: [XIC(Phase.CMD.START) XIC(Phase.CMD.HOLD) XIC(Phase.CMD.RESTART) XIC(Phase.CMD.STOP) XIC(Phase.CMD.ABORT) XIC(Phase.CMD.RESET) ,MOV(Phase.STATE_NO,Phase.STATE_NO) MOV(Phase.STEP_INDEX,Phase.STEP_INDEX) MOV(Phase.MSG.FAULT,Phase.MSG.FAULT) ]NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.PERMISSIVES.FAULTS.MESSAGING$'$N"
				    "Function=$'EXECUTE.PERMISSIVES.FAULTS.MESSAGING$'$N"
				    "";
				N: JSR(_120_PermissiveFaultAndMessaging,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.AOI$'$N"
				    "Function=$'AOI$'$N"
				    "";
				N: PhaseMode(AOI.Mode,Phase,cPHZ[0].MSG)PhaseCommon(AOI.Common,Phase)PhaseStepIndex(AOI.StepIndex,Phase)PhaseStateTransition(AOI.StateTransition,Phase.CMD,Phase.STAT,Phase.STATE,Phase.STATE_NO);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.STEPCONTROL$'$N"
				    "Function=$'EXECUTE.STEPCONTROL$'$N"
				    "";
				N: JSR(_050_StepControl,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.CONTROLMODULE$'$N"
				    "Function=$'EXECUTE.CONTROLMODULE$'$N"
				    "";
				N: JSR(_110_ControlModule,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.EXECUTE.ALARMING$'$N"
				    "Function=$'EXECUTE.ALARMING$'$N"
				    "";
				N: JSR(_130_Alarming,0);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEP.MAPPING$'$N"
				    "Function=$'STEP.MAPPING$'$N"
				    "";
				N: PhaseStepMapping(AOI.StepMapping,Phase);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.BYPASS$'$N"
				    "Function=$'BYPASS$'$N"
				    "";
				N: PhaseBypass(AOI.Bypass,Phase);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MAIN.EXTENDED.FUNCTION$'$N"
				    "Function=$'EXTENDED.FUNCTION$'$N"
				    "";
				N: NOP();
		END_ROUTINE

		ROUTINE _050_StepControl 
				RC: "Review:$N"
				    "the phase had AFI for mix timer step 5000$N"
				    "there was a $Qtransfer complete$Q that was completing the phase, this should be a cDI alias to TransferComplete$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.SIMULATE.RETURN$'$N"
				    "Function=$'SIMULATE.RETURN$'$N"
				    "";
				N: XIC(cSETUP.SIMULATION.Enabled)XIC(cSETUP.SIMULATION.PHASE)RET();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.IDLE$'$N"
				    "Function=$'STEP.CONTROL.IDE$'$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,1)MOV(2000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.INITIAL.RECORDSTEP$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,2000)[GEQ(Phase.STEP_TMR.CurrentStepIndex.ACC,Phase.STEP_TMR.RECORD.PRE) MOV(3000,Phase.STEP_INDEX_GOTO) ,FLL(0,Phase.ACTUAL[0],6) RES(MixTimer) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.PERMISSIVE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,3000)XIC(Phase.STAT.PERMISSIVE)MOV(4000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.INITIALIZE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,4000)GEQ(Phase.STEP_TMR.CurrentStepIndex.ACC,Phase.STEP_TMR.INITIALIZE.PRE)MOV(5000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.TARGET.CALCULATE.ADJUSTED$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: PhaseTargetAdjustLimit(AOI.TargetAdjustLimit,TargetTimeAdjustmentLimit,ActualTimeAdjustment,TargetTime,TargetTimeSetpoint,Phase.STAT.MAN)PhaseTargetAdjustLimit(AOI.TargetAdjustLimit2,TargetSpeedAdjustmentLimit,ActualSpeedAdjustment,TargetSpeed,TargetSpeedSetpoint,Phase.STAT.MAN);
				RC: "Complete based on time$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)[GRT(TargetTime,0) MUL(TargetTime,60000,MixTimer.PRE) ,EQU(TargetTimeSetpoint,0) MOV(2140000000,MixTimer.PRE) ,XIC(MixerMotor.STAT.ON_OPEN) RTO(MixTimer,?,?) ,GRT(TargetTimeSetpoint,0) XIC(MixTimer.DN) MOV(6000,Phase.STEP_INDEX_GOTO) ];
				RC: "Complete based on STOP STEP$N"
				    "";
				N: XIC(Unit.STATE.RUNNING)XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)EQU(TargetTimeSetpoint,0)GRT(Phase.RECIPE.STOP_STEP,0)EQU(Unit.STEP_INDEX,Phase.RECIPE.STOP_STEP)MOV(6000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.CALCULATE.ACTUAL$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,5000)TimeElapsedRemaining(MixTimerIntervals.AOI,MixTimer.PRE,MixTimer.ACC,MixTimerIntervals.ACC)[MOV(MixTimerIntervals.ACC.Elapsed.Minutes,Phase.ACTUAL[0]) MOV(MixTimerIntervals.ACC.Elapsed.Minutes,ActualTime) ,MOV(MixTimerIntervals.ACC.Remaining.Minutes,ActualTimeRemaining) ,MOV(MixTimerIntervals.ACC.RemainingClock.Minutes,ActualMinutesRemaining) ,MOV(MixTimerIntervals.ACC.RemainingClock.Seconds,ActualSecondsRemaining) ,GRT(TargetTime,0) CPT(ActualTimePercent,100*ActualTime/TargetTime) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.FINAL.RECORDSTEP$'$N"
				    "Function=$'STANDARD.PHASE.STEPCTRL.SECTION.FINAL.RECORDSTEP$'$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,6000)MOV(10000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.FINAL.RECORDSTEP$'$N"
				    "Function=$'STANDARD.PHASE.STEPCTRL.SECTION.FINAL.RECORDSTEP$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RUNNING)EQU(Phase.STEP_INDEX,10000)OTE(Phase.STAT.RUNNING_COMPLETE);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.INITIAL.RECORDSTEP$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.HOLDING)EQU(Phase.STEP_INDEX,2000)[GEQ(Phase.STEP_TMR.CurrentStepIndex.ACC,Phase.STEP_TMR.RECORD.PRE) MOV(3000,Phase.STEP_INDEX_GOTO) ,FLL(0,Phase.ACTUAL[0],6) RES(MixTimer) ];
				RC: "HOLDING COMPLETE$N"
				    "Wait for mixer motor to turn off, then wait for a brief delay and goto HELD.$N"
				    "";
				N: XIC(Phase.STATE.HOLDING)[TON(Phase.STEP_TMR.HOLDING,?,?) ,XIC(MixerMotor.STAT.OFF_CLOSED) XIC(Phase.STEP_TMR.HOLDING.DN) OTE(Phase.STAT.HOLDING_COMPLETE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.RESTARTING$'$N"
				    "Function=$'STEP.CONTROL.SECTION.RESTARTING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.RESTARTING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Restarting)[LIM(3000,Phase.STEP_INDEX,5000) MOV(3000,Phase.STEP_INDEX_GOTO) ,LIM(6000,Phase.STEP_INDEX,9999) MOV(10000,Phase.STEP_INDEX_GOTO) ];
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.MOTOR.RESET.FAULT$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RESTARTING)OTU(MixerMotor.STAT.STATE_1)OTL(MixerMotor.CMD.RESET);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.RESTARTING.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.RESTARTING)[XIC(Phase.STEP_TMR.RESTARTING.DN) OTE(Phase.STAT.RESTARTING_COMPLETE) ,TON(Phase.STEP_TMR.RESTARTING,?,?) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.STOPPING$'$N"
				    "Function=$'STEP.CONTROL.SECTION.STOPPING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.STOPPING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Stopping)MOV(10000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.STOPPING.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.STOPPING)EQU(Phase.STEP_INDEX,10000)OTE(Phase.STAT.STOPPING_COMPLETE);
				N: XIC(Phase.STATE.HOLDING)[TON(Phase.STEP_TMR.HOLDING,?,?) ,XIC(Phase.STEP_TMR.HOLDING.DN) OTE(Phase.STAT.HOLDING_COMPLETE) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.ABORTING$'$N"
				    "Function=$'STEP.CONTROL.SECTION.ABORTING$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.ABORTING$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Aborting)MOV(10000,Phase.STEP_INDEX_GOTO);
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.ABORTING.COMPLETE$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.ABORTING)EQU(Phase.STEP_INDEX,10000)OTE(Phase.STAT.ABORTING_COMPLETE);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.STEPCTRL.SECTION.RESET$'$N"
				    "Function=$'STEP.CONTROL.SECTION.RESET$'$N"
				    "";
				N: NOP();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.STEPCONTROL.SECTION.RESET$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: XIC(Phase.STATE.Oneshot.Idle)NOP();
				N: XIC(Phase.STATE.IDLE)OTU(Phase.STAT.COMPLETE);
		END_ROUTINE

		ROUTINE _110_ControlModule 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.LOW.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.SIMULATE.RETURN$'$N"
				    "Function=$'SIMULATE.RETURN$'$N"
				    "";
				N: XIC(cSETUP.SIMULATION.Enabled)XIC(cSETUP.SIMULATION.PHASE)RET();
				RC: "Template=$'PHASE.MATERIAL.MIXER.RUN.SPEED.LOW$'$N"
				    "Function=$'RUNG.CONTROLMODULE.AUTORUN.MIXERMOTOR$'$N"
				    "[Description]$N"
				    "[Note]$N"
				    "";
				N: [XIC(Phase.STATE.RUNNING) EQU(Phase.STEP_INDEX,5000) TOF(MixerOffDelay,?,?) ,XIC(MixerOffDelay.DN) XIO(Phase.STATE.HOLDING) XIO(Phase.STATE.HELD) XIO(Phase.STATE.STOPPED) XIO(Phase.STATE.ABORTED) OTE(Phase.CM.AutoRun[10]) ,[XIC(Phase.STATE.Oneshot.Holding) ,XIC(Phase.STATE.Oneshot.Stopping) ,XIC(Phase.STATE.Oneshot.Aborting) ,XIC(MixerOffDelay.TT) XIO(AutoRunMixerMotor) ,XIC(Phase.STAT.COMPLETE) ] MOV(MixerOffDelay.PRE,MixerOffDelay.ACC) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.CONTROLMODULE.RESET.CM$'$N"
				    "Function=$'CONTROLMODULE.RESET.CM$'$N"
				    "";
				N: [XIC(Phase.CMD.START) ,XIC(Phase.CMD.RESTART) ]OTL(MixerMotor.CMD.RESET);
		END_ROUTINE

		ROUTINE _120_PermissiveFaultAndMessaging 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "$N"
				    "";
				N: [MOV(0,Phase.MSG.PERM) ,XIO(MixerRemote.STAT.ON) MOV(1,Phase.MSG.PERM) ,XIC(MixerInterlocked.STAT.ON) MOV(3,Phase.MSG.PERM) ,XIO(MixerCommOk.STAT.ON) MOV(4,Phase.MSG.PERM) ,XIO(MixerMotor.STAT.AUTO) MOV(5,Phase.MSG.PERM) ,EQU(Phase.MSG.PERM,0) OTE(Phase.STAT.PERMISSIVE) ];
				RC: "$N"
				    "";
				N: [XIC(Phase.STATE.RUNNING) ,XIC(Phase.STATE.RESTARTING) ]EQU(Phase.MSG.FAULT,0)[XIC(EStop.STAT.FAULT) MOV(21,Phase.MSG.FAULT) ,XIO(MixerRemote.STAT.ON) MOV(22,Phase.MSG.FAULT) ,XIC(MixerInterlocked.STAT.ON) MOV(24,Phase.MSG.FAULT) ,XIO(MixerCommOk.STAT.ON) MOV(25,Phase.MSG.FAULT) ,XIC(MixerMotor.STAT.FAULT) MOV(26,Phase.MSG.FAULT) ,XIC(MixerMotorSpeed.STAT.FAULT) MOV(27,Phase.MSG.FAULT) ,XIO(MixerMotor.STAT.AUTO) MOV(28,Phase.MSG.FAULT) ,XIC(cSETUP.SIMULATION.Enabled) XIC(cSETUP.SIMULATION.PHASE) MOV(0,Phase.MSG.FAULT) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MESSAGE$'$N"
				    "Function=$'STATUS.MESSAGE$'$N"
				    "";
				N: [MOV(0,Phase.MSG.MSG) ,XIC(Phase.STAT.BYPASS) XIO(Phase.STEP.RECORD) MOV(61,Phase.MSG.MSG) ,XIC(Phase.STAT.BYPASS) XIC(Phase.STEP.RECORD) MOV(62,Phase.MSG.MSG) ,XIC(Phase.STATE.HELD) XIO(Phase.STAT.FAULTED) MOV(63,Phase.MSG.MSG) ];
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MESSAGE.UNIQUE$'$N"
				    "Function=$'STATUS.MESSAGE.UNIQUE$'$N"
				    "";
				N: MakeMessageNumberGloballyUnique(AOI.Message,Phase.ID,Phase.MSG);
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.MESSAGE.STATUS$'$N"
				    "Function=$'MESSAGE$'$N"
				    "";
				N: [LIM(2000,Phase.STEP_INDEX,3000) NEQ(Phase.MSG.PERM,0) MOV(Phase.MSG.PERM,Phase.MSG.MSG) ,GEQ(Phase.STEP_INDEX,3000) NEQ(Phase.MSG.FAULT,0) MOV(Phase.MSG.FAULT,Phase.MSG.MSG) ,EQU(Phase.MSG.FAULT,0) EQU(Phase.MSG.PERM,0) ONS(Phase.MSG.OS.1) CLR(Phase.MSG.MSG) ];
		END_ROUTINE

		ROUTINE _130_Alarming 
				RC: "Type=$'PHASE$'$N"
				    "Template=$'MIXER.HIGH.SPEED:01.01.01$'$N"
				    "";
				N: NOP();
				RC: "Template=$'RUNG.TEMPLATE.STANDARD.PHASE.ALARM.FAULT$'$N"
				    "Function=$'ALARM.FAULT$'$N"
				    "";
				N: [XIC(Phase.STAT.FAULTED) OTE(Phase.ALARM[0].ACTIVE) ,AlarmControl(AOI.AlarmControl[0],Phase.ALARM[0],OIT.UNACK_ALARMS_TEMP,cCOMMON.SILENCE) ];
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM
